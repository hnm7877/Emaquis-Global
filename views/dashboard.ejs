<!DOCTYPE html>
<html lang="fr">
  <meta http-equiv="content-type" content="text/html;charset=UTF-8" />

  <head>
    <!-- Google tag (gtag.js) -->
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-NT2SW8WBHT"
    ></script>
    <script>
      window.dataLayer = window.dataLayer || [];

      function gtag() {
        dataLayer.push(arguments);
      }
      gtag("js", new Date());

      gtag("config", "G-NT2SW8WBHT");
    </script>
    <meta charset="utf-8" />
    <title>Tableau de board</title>
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta
      content="Dashboard E-maquis"
      name="description"
    />
    <meta content="MyraStudio" name="author" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <script
      src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
      integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
      integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
      crossorigin="anonymous"
    ></script>
    <script src="vendors/apex_chart/apex-chart2.js"></script>
    <script src="assets/js/jquery.min.js"></script>
    <script src="js/confetti.js"></script>

    <script src="js/notifMano.js" type="application/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.js.iife.js"></script>
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/driver.js@1.0.1/dist/driver.css"
    />
    <!-- App favicon -->
    <link rel="shortcut icon" href="assets/images/favicon.ico" />

    <!-- App css -->
    <link
      href="assets/css/bootstrap.min.css"
      rel="stylesheet"
      type="text/css"
    />
    <link href="assets/css/icons.min.css" rel="stylesheet" type="text/css" />
    <link href="assets/css/theme.min.css" rel="stylesheet" type="text/css" />
    <link href="assets/css/style.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="css/metisMenu.css" />

    <!-- Favicon -->
    <link
      rel="shortcut icon"
      type="image/x-icon"
      href="../img/paresseux_sous_officiel.png"
    />

    <%- include('partial/newHead.ejs') %> <%-
    include('partial/notifManoScript.ejs') %>
    <script src="js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdn.lordicon.com/lordicon.js"></script>
  </head>

  <body class="crm_body_bg">
    <!-- Modal d'annonce des nouvelles fonctionnalités -->
    <div
      class="modal fade"
      id="newFeaturesModal"
      tabindex="-1"
      role="dialog"
      aria-labelledby="newFeaturesModalLabel"
      aria-hidden="true"
    >
      <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="newFeaturesModalLabel">
              <i class="fas fa-star text-warning"></i> Nouvelles Fonctionnalités
            </h5>
            <button
              type="button"
              class="close"
              data-dismiss="modal"
              aria-label="Close"
            >
              <span aria-hidden="true">&times;</span>
            </button>
          </div>
          <div class="modal-body">
            <div
              id="featuresCarousel"
              class="carousel slide"
              data-ride="carousel"
            >
              <ol class="carousel-indicators">
                <li
                  data-target="#featuresCarousel"
                  data-slide-to="0"
                  class="active"
                ></li>
                <li data-target="#featuresCarousel" data-slide-to="1"></li>
                <li data-target="#featuresCarousel" data-slide-to="2"></li>
              </ol>
              <div class="carousel-inner">
                <!-- Slide 1: Réserve de stock -->
                <div class="carousel-item active">
                  <div
                    class="premium-slide-img"
                    style="background-image: url('/img/depo2.jpg')"
                  >
                    <div class="premium-slide-overlay"></div>
                    <div class="premium-slide-content">
                      <div class="premium-slide-icon orange-lock">
                        <i class="fas fa-lock"></i>
                      </div>
                      <h2 class="premium-slide-title">Réserve de stock</h2>
                      <p class="premium-slide-desc">
                        Gardez une longueur d'avance : gérez vos réserves et
                        évitez les ruptures grâce à une visibilité complète sur
                        votre stock, même en dehors des heures d'ouverture.
                      </p>
                    </div>
                  </div>
                </div>
                <!-- Slide 2: Boissons offertes -->
                <div class="carousel-item">
                  <div
                    class="premium-slide-img"
                    style="background-image: url('/img/boisson_offerte.jpeg')"
                  >
                    <div class="premium-slide-overlay"></div>
                    <div class="premium-slide-content">
                      <div class="premium-slide-icon green-lock">
                        <i class="fas fa-lock-open"></i>
                      </div>
                      <h2 class="premium-slide-title">Boissons offertes</h2>
                      <p class="premium-slide-desc">
                        Fidélisez vos clients et récompensez vos équipes :
                        offrez des boissons en toute simplicité, avec un suivi
                        précis et une validation sécurisée.
                      </p>
                    </div>
                  </div>
                </div>
                <!-- Slide 3: Option nourriture -->
                <div class="carousel-item">
                  <div
                    class="premium-slide-img"
                    style="background-image: url('/img/tapas.jpeg')"
                  >
                    <div class="premium-slide-overlay"></div>
                    <div class="premium-slide-content">
                      <div class="premium-slide-icon green-lock">
                        <i class="fas fa-lock-open"></i>
                      </div>
                      <h2 class="premium-slide-title">Option nourriture</h2>
                      <p class="premium-slide-desc">
                        Développez votre offre : ajoutez facilement des plats à
                        votre carte, gérez les stocks alimentaires et augmentez
                        votre chiffre d'affaires.
                      </p>
                    </div>
                  </div>
                </div>
              </div>
              <a
                class="carousel-control-prev"
                href="#featuresCarousel"
                role="button"
                data-slide="prev"
              >
                <span
                  class="carousel-control-prev-icon"
                  aria-hidden="true"
                ></span>
                <span class="sr-only">Précédent</span>
              </a>
              <a
                class="carousel-control-next"
                href="#featuresCarousel"
                role="button"
                data-slide="next"
              >
                <span
                  class="carousel-control-next-icon"
                  aria-hidden="true"
                ></span>
                <span class="sr-only">Suivant</span>
              </a>
            </div>
          </div>
          <div class="modal-footer">
            <div class="premium-info">
              <i class="fas fa-info-circle"></i> Ces fonctionnalités sont
              disponibles dans la version premium
            </div>
            <div>
              <button
                type="button"
                class="btn btn-secondary"
                id="closePremiumModal"
              >
                Fermer
              </button>
              <button
                type="button"
                class="btn btn-primary"
                id="activateOptionsBtn"
              >
                <i class="fas fa-bolt"></i> Activer les options
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <style>
      #newFeaturesModal .modal-content {
        border-radius: 15px;
        overflow: hidden;
        border: none;
        box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
      }

      #newFeaturesModal .modal-header {
        background: linear-gradient(135deg, #ff9c2c 0%, #ff6b2c 100%);
        color: white;
        border: none;
        padding: 20px;
      }

      #newFeaturesModal .modal-title {
        color: white;
        font-size: 1.5rem;
        font-weight: 600;
      }

      #newFeaturesModal .close {
        color: white;
        opacity: 0.8;
        text-shadow: none;
      }

      #newFeaturesModal .close:hover {
        opacity: 1;
      }

      .feature-card {
        padding: 30px;
        text-align: center;
        background: white;
        border-radius: 10px;
        transition: all 0.3s ease;
      }

      .feature-image {
        margin-bottom: 20px;
        display: flex;
        justify-content: center;
        align-items: center;
        height: 150px;
      }

      .feature-content h3 {
        color: #2c3e50;
        font-size: 1.5rem;
        margin-bottom: 15px;
        font-weight: 600;
      }

      .feature-content p {
        color: #666;
        font-size: 1.1rem;
        line-height: 1.6;
      }

      .carousel-indicators {
        bottom: -50px;
      }

      .carousel-indicators li {
        background-color: #ff9c2c;
        width: 10px;
        height: 10px;
        border-radius: 50%;
        margin: 0 5px;
      }

      .carousel-control-prev,
      .carousel-control-next {
        width: 5%;
        opacity: 0.8;
      }

      .carousel-control-prev-icon,
      .carousel-control-next-icon {
        background-color: #ff9c2c;
        border-radius: 50%;
        padding: 20px;
      }

      #newFeaturesModal .modal-footer {
        border-top: none;
        padding: 20px;
        background: #f8f9fa;
      }

      #newFeaturesModal .btn-primary {
        background: #ff9c2c;
        border: none;
        padding: 10px 25px;
        font-weight: 600;
        transition: all 0.3s ease;
      }

      #newFeaturesModal .btn-primary:hover {
        background: #ff8c1a;
        transform: translateY(-2px);
      }

      #newFeaturesModal .btn-secondary {
        background: #6c757d;
        border: none;
        padding: 10px 25px;
        font-weight: 600;
        transition: all 0.3s ease;
      }

      #newFeaturesModal .btn-secondary:hover {
        background: #5a6268;
        transform: translateY(-2px);
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .feature-card {
        animation: fadeInUp 0.5s ease-out;
      }

      .premium-badge {
        display: inline-block;
        background: linear-gradient(135deg, #ffd700 0%, #ffa500 100%);
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-weight: 600;
        margin-top: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        animation: pulse 2s infinite;
      }

      .premium-badge i {
        margin-right: 5px;
      }

      .feature-list {
        list-style: none;
        padding: 0;
        margin-top: 20px;
        text-align: left;
      }

      .feature-list li {
        margin: 10px 0;
        color: #666;
        font-size: 1rem;
      }

      .feature-list li i {
        color: #ff9c2c;
        margin-right: 10px;
        width: 20px;
      }

      @keyframes pulse {
        0% {
          transform: scale(1);
        }
        50% {
          transform: scale(1.05);
        }
        100% {
          transform: scale(1);
        }
      }

      .feature-card {
        position: relative;
        overflow: hidden;
      }

      .feature-card::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: linear-gradient(90deg, #ff9c2c, #ff6b2c);
      }

      .modal-footer {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .premium-info {
        color: #666;
        font-size: 0.9rem;
      }

      .premium-info i {
        color: #ff9c2c;
        margin-right: 5px;
      }

      .premium-slide-img {
        position: relative;
        width: 100%;
        min-height: 340px;
        border-radius: 16px;
        background-size: cover;
        background-position: center;
        display: flex;
        align-items: flex-end;
        overflow: hidden;
        box-shadow: 0 4px 24px rgba(0, 0, 0, 0.1);
      }
      .premium-slide-overlay {
        position: absolute;
        inset: 0;
        background: linear-gradient(
          180deg,
          rgba(0, 0, 0, 0.25) 40%,
          rgba(0, 0, 0, 0.65) 100%
        );
        z-index: 1;
      }
      .premium-slide-content {
        position: relative;
        z-index: 2;
        color: #fff;
        padding: 36px 28px 32px 28px;
        width: 100%;
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
      .premium-slide-icon {
        font-size: 2.2rem;
        margin-bottom: 12px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        border-radius: 50%;
        padding: 8px 14px 8px 14px;
        background: rgba(255, 255, 255, 0.18);
        backdrop-filter: blur(2px);
      }
      .premium-slide-title {
        font-size: 1.7rem;
        font-weight: 700;
        margin-bottom: 10px;
        color: #fff;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.18);
      }
      .premium-slide-desc {
        font-size: 1.13rem;
        font-weight: 400;
        color: #f7f7f7;
        text-shadow: 0 1px 4px rgba(0, 0, 0, 0.13);
        max-width: 420px;
      }

      .carousel-control-prev,
      .carousel-control-next {
        z-index: 10 !important;
      }
    </style>

    <script>
      $(document).ready(function () {
        // Afficher la modal au chargement de la page
        $("#newFeaturesModal").modal("show");

        // Fermer la modal avec le bouton Fermer
        $("#closePremiumModal, #newFeaturesModal .close").on(
          "click",
          function () {
            $("#newFeaturesModal").modal("hide");
          }
        );

        // Rediriger vers /profile quand on clique sur Activer les options
        $("#activateOptionsBtn").on("click", function () {
          $("#newFeaturesModal").modal("hide");
          setTimeout(function () {
            window.location.href = "/profile";
          }, 350);
        });

        // Animation des cartes au changement de slide
        $("#featuresCarousel").on("slide.bs.carousel", function () {
          $(".feature-card").css("animation", "none");
          setTimeout(function () {
            $(".feature-card").css("animation", "fadeInUp 0.5s ease-out");
          }, 50);
        });
      });
    </script>

    <%- include('partial/donateModal') %>

    <div id="layout-wrapper">
      <!-- ============================================================== -->
      <!-- Start right Content here -->
      <!-- ============================================================== -->
      <div class="">
        <div class="page-content">
          <div class="container-fluid">
            <!-- start page title -->
            <div class="row">
              <div class="col-12">
                <div
                  class="page-title-box d-flex align-items-center justify-content-between"
                >
                  

                  <!-- <div class="page-title-right">
                                    <ol class="breadcrumb m-0">
                                        <li class="breadcrumb-item"><a href="javascript: void(0);">Xacton</a></li>
                                        <li class="breadcrumb-item active">Dashboard</li>
                                    </ol>
                                </div>
                                -->
                </div>
              </div>
            </div>
            <!-- end page title -->

            <!-- HEADER MODERNE -->
            <div class="dashboard-header animated-fadeInDown">
              <div class="dashboard-title-row">
                <h1 class="dashboard-title">
                  <i class="fas fa-tachometer-alt"></i> Tableau de bord
                </h1>
                <!--
                <span class="dashboard-badge">Premium</span>
              -->
              </div>
              <div class="dashboard-subtitle">
                Bienvenue sur votre espace de gestion, tout est sous contrôle !
              </div>
            </div>

            <!-- STATISTIQUES CLÉS (toujours en haut) -->
            <div class="row dashboard-stats-row animated-fadeInUp mb-4">
              <div class="col-md-6 col-xl-3">
                <div class="dashboard-card dashboard-card-bg-orange card-animated">
                  <div class="dashboard-card-icon">
                    <lord-icon src="https://cdn.lordicon.com/fmasbomy.json" trigger="loop" delay="3500" style="width: 48px; height: 48px"></lord-icon>
                  </div>
                  <div class="dashboard-card-content">
                    <div class="dashboard-card-label">Total employé(es)</div>
                    <div class="dashboard-card-value animated-counter"><a href="/utilisateur"><%- totalemploye %></a></div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 col-xl-3">
                <div class="dashboard-card dashboard-card-bg-green card-animated">
                  <div class="dashboard-card-icon">
                    <lord-icon src="https://cdn.lordicon.com/jxynfsur.json" trigger="loop" state="loop-rotate" colors="primary:#ffffff,secondary:#FF9C2C" style="width: 48px; height: 48px"></lord-icon>
                  </div>
                  <div class="dashboard-card-content">
                    <div class="dashboard-card-label">Ventes du jour</div>
                    <div class="dashboard-card-value animated-counter"><a class="vente-jour" href="/data_table"><%= totalVente %> <%= currency %></a></div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 col-xl-3">
                <div class="dashboard-card dashboard-card-bg-yellow card-animated">
                  <div class="dashboard-card-icon">
                    <lord-icon src="https://cdn.lordicon.com/jdngjjzg.json" trigger="loop" delay="3500" style="width: 48px; height: 48px"></lord-icon>
                  </div>
                  <div class="dashboard-card-content">
                    <div class="dashboard-card-label">Produit le plus vendu</div>
                    <div class="dashboard-card-value dashboard-card-product">
                      <% if(productMostSold?.produit) { %>
                        <img src="<%= productMostSold?.produit?.image %>" alt="img boisson" class="dashboard-product-img" />
                        <span class="produit-plus-vendu"><%= productMostSold?.produit?.nom_produit %> <%= productMostSold?.taille %> x <%= productMostSold?.quantite %></span>
                      <% } else { %>
                        <span>Aucun</span>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
              <div class="col-md-6 col-xl-3">
                <div class="dashboard-card dashboard-card-bg-blue card-animated">
                  <div class="dashboard-card-icon">
                    <lord-icon src="https://cdn.lordicon.com/dypzookn.json" trigger="loop" delay="3500" style="width: 48px; height: 48px"></lord-icon>
                  </div>
                  <div class="dashboard-card-content">
                    <div class="dashboard-card-label">Chiffre d'affaires Cette semaine</div>
                    <div class="dashboard-card-value animated-counter"><a class="chiffre-affaires-semaine" href="/bilan"><%= totalVenteWeek %> <%= currency %></a></div>
                  </div>
                </div>
              </div>
            </div>

            <!-- SECTION MEILLEUR EMPLOYÉ ET CLASSEMENT -->
            <div class="row dashboard-meilleur-employe-row animated-fadeInUp mb-4">
              <div class="col-lg-6 col-md-12 mb-4">
                <!-- Carte du meilleur employé -->
                <div class="dashboard-block-meilleur-employe">
                  <div class="meilleur-employe-header">
                    <div class="meilleur-employe-title">
                      <lord-icon src="https://cdn.lordicon.com/ryqjzqbk.json" trigger="loop" delay="2000" style="width: 32px; height: 32px"></lord-icon>
                      <h3>🏆 Meilleur employé de la semaine</h3>
                    </div>
                    <div class="meilleur-employe-badge">
                      <span class="badge-text">Performance</span>
                    </div>
                  </div>
                  
                  <div class="meilleur-employe-content">
                    <div class="employe-profile">
                      <div class="employe-avatar">
                        <div class="avatar-circle">
                          <span class="avatar-initials"><%= meilleurEmploye?.nom?.charAt(0) || 'E' %><%= meilleurEmploye?.prenom?.charAt(0) || 'M' %></span>
                        </div>
                        <div class="crown-icon">👑</div>
                      </div>
                      
                      <div class="employe-info">
                        <h4 class="employe-name"><%= meilleurEmploye?.nom || 'Employé' %> <%= meilleurEmploye?.prenom || 'Modèle' %></h4>
                        <p class="employe-role"><%= meilleurEmploye?.role || 'Barman' %></p>
                        
                        <div class="employe-stats">
                          <div class="stat-item">
                            <div class="stat-icon">💰</div>
                            <div class="stat-content">
                              <div class="stat-value"><%= formatAmount(meilleurEmploye && meilleurEmploye.totalMontant ? meilleurEmploye.totalMontant : 0) %> <%= currency %></div>
                              <div class="stat-label">Chiffre d'affaires</div>
                            </div>
                          </div>
                          
                          <div class="stat-item">
                            <div class="stat-icon">📊</div>
                            <div class="stat-content">
                              <div class="stat-value"><%= meilleurEmploye && meilleurEmploye.nombreCommandes ? meilleurEmploye.nombreCommandes : 0 %></div>
                              <div class="stat-label">Commandes</div>
                            </div>
                          </div>
                          
                          <div class="stat-item">
                            <div class="stat-icon">📈</div>
                            <div class="stat-content">
                              <div class="stat-value"><%= meilleurEmploye && meilleurEmploye.moyenneParCommande ? formatAmount(meilleurEmploye.moyenneParCommande) : formatAmount(0) %> <%= currency %></div>
                              <div class="stat-label">Moyenne/commande</div>
                            </div>
                          </div>
                          
                          <div class="stat-item">
                            <div class="stat-icon">🎯</div>
                            <div class="stat-content">
                              <div class="stat-value"><%= meilleurEmploye && meilleurEmploye.pourcentageObjectif ? meilleurEmploye.pourcentageObjectif : 0 %>%</div>
                              <div class="stat-label">Objectif atteint</div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <div class="employe-progress">
                      <div class="progress-container">
                        <div class="progress-bar">
                          <div class="progress-fill" style="width: <%= meilleurEmploye && meilleurEmploye.pourcentageObjectif ? Math.min(meilleurEmploye.pourcentageObjectif, 100) : 0 %>%"></div>
                        </div>
                        <div class="progress-text">Progression vers l'objectif</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              
              <div class="col-lg-6 col-md-12 mb-4">
                <!-- Classement des employés -->
                <div class="dashboard-block-classement-employes">
                  <div class="classement-header">
                    <div class="classement-title">
                      <lord-icon src="https://cdn.lordicon.com/ryqjzqbk.json" trigger="loop" delay="2000" style="width: 28px; height: 28px"></lord-icon>
                      <h3>🏁 Classement des employés</h3>
                    </div>
                    <div class="classement-badge">
                      <span class="badge-text">Compétition</span>
                    </div>
                  </div>
                  
                  <div class="classement-content">
                    <!-- Compte à rebours vers la prochaine réinitialisation -->
                    <div class="countdown-container">
                      <div class="countdown-title">
                        <i class="fas fa-clock"></i>
                        <span>Prochaine réinitialisation</span>
                      </div>
                      <div class="countdown-timer" id="countdownTimer">
                        <div class="countdown-item">
                          <span class="countdown-number" id="countdownDays">00</span>
                          <span class="countdown-label">Jours</span>
                        </div>
                        <div class="countdown-separator">:</div>
                        <div class="countdown-item">
                          <span class="countdown-number" id="countdownHours">00</span>
                          <span class="countdown-label">Heures</span>
                        </div>
                        <div class="countdown-separator">:</div>
                        <div class="countdown-item">
                          <span class="countdown-number" id="countdownMinutes">00</span>
                          <span class="countdown-label">Min</span>
                        </div>
                        <div class="countdown-separator">:</div>
                        <div class="countdown-item">
                          <span class="countdown-number" id="countdownSeconds">00</span>
                          <span class="countdown-label">Sec</span>
                        </div>
                      </div>
                    </div>

                    <div class="classement-list" id="classementEmployes">
                      <!-- Le classement sera généré dynamiquement via JavaScript -->
                    </div>
                    
                    <div class="classement-footer">
                      <div class="challenge-text">
                        <i class="fas fa-trophy"></i>
                        <span>Défiez vos collègues et montez en première place !</span>
                      </div>
                      <div class="reset-info">
                        <i class="fas fa-sync-alt"></i>
                        <span>Les scores se réinitialisent chaque lundi à 12h00</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- SECTION VENTES / OBJECTIF / PRODUITS EN RUPTURE (juste en dessous) -->
            <div class="row dashboard-ventes-row animated-fadeInUp">
              <!-- Graphiques de ventes (Chiffre d'affaires + Nombre de commandes) -->
              <div class="col-lg-7 col-md-12 mb-4">
                <div class="dashboard-block dashboard-block-ventes">
                  <div class="dashboard-block-header">
                    <span class="dashboard-block-title">
                      <i class="fas fa-chart-line"></i> Ventes
                      <span class="tooltip-hint" title="Passez la souris sur les barres pour voir les détails">
                        <i class="fas fa-info-circle" style="font-size: 0.8rem; color: #98ED58; margin-left: 8px;"></i>
                      </span>
                    </span>
                    <div class="dashboard-block-filters">
                      <select class="nice_Select2 form-control" id="chart_week">
                        <option value="">Semaine</option>
                        <% for(let week = 1; week <= weeksInMonth; week++) { %>
                          <option value="<%= week %>" <%= week === currentWeekIndex ? 'selected' : '' %>>Semaine <%= week %></option>
                        <% } %>
                      </select>
                      <select class="nice_Select2 form-control" id="chart_month">
                        <option value="1">Mois</option>
                        <% for(month of months) { %>
                          <option value="<%= month.code %>" <%= month.code === new Date().getMonth() + 1 ? 'selected' : '' %>><%= month.nom %></option>
                        <% } %>
                      </select>
                      <select class="nice_Select2 form-control" id="chart_year">
                        <option value="1">Année</option>
                        <% for(year of years) { %>
                          <option value="<%= year %>" <%= year === new Date().getFullYear() ? 'selected' : '' %>><%= year %></option>
                        <% } %>
                      </select>
                    </div>
                  </div>
                  <div class="dashboard-block-body">
                    <!-- Onglets pour basculer entre les graphiques -->
                    <div class="chart-tabs mb-3">
                      <button class="chart-tab active" data-chart="sales">
                        <i class="fas fa-chart-line"></i> Chiffre d'affaires
                      </button>
                      <button class="chart-tab" data-chart="orders">
                        <i class="fas fa-shopping-cart"></i> Nombre de commandes
                      </button>
                    </div>
                    
                    <!-- Conteneur des graphiques -->
                    <div class="chart-container">
                      <div id="management_bar" class="chart-active"></div>
                      <div id="orders_chart" class="chart-hidden"></div>
                    </div>
                    <div class="loader_container"><div class="loader"></div></div>
                  </div>
                </div>
              </div>
              <!-- Objectif à atteindre -->
              <div class="col-lg-2 col-md-6 mb-4">
                <div class="dashboard-block dashboard-block-objectif text-center">
                  <div class="dashboard-block-header">
                    <span class="dashboard-block-title"><i class="fas fa-bullseye"></i> Objectif</span>
                  </div>
                  <div class="dashboard-block-body">
                    <div class="objectif-radial">
                      <lord-icon src="https://cdn.lordicon.com/lupuorrc.json" trigger="loop" delay="2000" style="width: 60px; height: 60px;"></lord-icon>
                      <div id="chart-currently"></div>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Produits en rupture -->
              <div class="col-lg-3 col-md-6 mb-4">
                <div class="dashboard-block dashboard-block-rupture">
                  <div class="dashboard-block-header">
                    <span class="dashboard-block-title"><i class="fas fa-exclamation-triangle"></i> Produits en rupture</span>
                  </div>
                  <div class="dashboard-block-body">
                    <div class="table-responsive custom-scroll">
                      <% if(Tab.length === 0) { %>
                        <div class="alert alert-success" role="alert">
                          Aucun produit en rupture de stock pour le moment.
                        </div>
                      <% } else { %>
                        <table class="table table-centered table-hover table-xl mb-0 dashboard-table-rupture">
                          <thead>
                            <tr>
                              <th>Produit</th>
                              <th>Qté</th>
                              <th>Taille</th>
                            </tr>
                          </thead>
                          <tbody>
                            <% Tab.forEach(el => { %> <% if(el.quantite === 0 && !el.is_cocktail) { %>
                            <tr>
                              <td>
                                <div class="d-flex align-items-center">
                                  <img src="<%= el.produit.image %>" alt="" class="rupture-img" />
                                  <span class="rupture-nom"><%= el.produit.nom_produit %></span>
                                </div>
                              </td>
                              <td><span class="rupture-quantite"><%= el.quantite %></span></td>
                              <td><span class="rupture-taille"><%= el.taille %></span></td>
                            </tr>
                            <% } %> <% }) %>
                          </tbody>
                        </table>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- SECTION INVENTAIRE & DETAILS DES VENTES -->
            <div class="row dashboard-inventaire-row animated-fadeInUp">
              <!-- Inventaire du stock -->
              <div class="col-xl-6 mb-4">
                <div class="dashboard-block dashboard-block-inventaire">
                  <div class="dashboard-block-header">
                    <span class="dashboard-block-title">
                      <lord-icon src="https://cdn.lordicon.com/ghhwiltn.json" trigger="loop" delay="2000" style="width: 32px; height: 32px;"></lord-icon>
                      Inventaire du stock
                    </span>
                  </div>
                  <div class="dashboard-block-body">
                    <div class="table-responsive custom-scroll">
                      <table class="table table-centered table-hover table-xl mb-0 dashboard-table-inventaire">
                        <thead>
                          <tr>
                            <th>Produit</th>
                            <th>Prix achat</th>
                            <th>Prix vente</th>
                            <th>Qté</th>
                            <th>Taille</th>
                          </tr>
                        </thead>
                        <tbody>
                          <% Tab.forEach(el =>{%>
                          <tr>
                            <td>
                              <div class="d-flex align-items-center">
                                <img src="<%= el.produit.image %>" alt="" class="inventaire-img" />
                                <span class="inventaire-nom"><%= el.produit.nom_produit %></span>
                              </div>
                            </td>
                            <td><%= el.prix_achat %> <%= currency %></td>
                            <td><span class="badge badge-soft-secondary p-2"><%= el.prix_vente %> <%= currency %></span></td>
                            <td>
                              <% if(el.quantite <= 100 && !el.is_cocktail){ %>
                              <span class="inventaire-quantite inventaire-quantite-low"><%= el.quantite %></span>
                              <% } else{ %>
                              <span class="inventaire-quantite"><%=el.is_cocktail ? "∞": el.quantite %></span>
                              <% } %>
                            </td>
                            <td><%= el.taille %></td>
                          </tr>
                          <%})%>
                        </tbody>
                      </table>
                    </div>
                  </div>
                </div>
              </div>
              <!-- Détails des ventes -->
              <div class="col-xl-6 mb-4">
                <div class="dashboard-block dashboard-block-ventedetail">
                  <div class="dashboard-block-header">
                    <span class="dashboard-block-title">
                      <lord-icon src="https://cdn.lordicon.com/ivayzoru.json" trigger="loop" delay="2000" style="width: 32px; height: 32px;"></lord-icon>
                      Détails des ventes
                    </span>
                  </div>
                  <div class="dashboard-block-body">
                    <div class="table-responsive custom-scroll">
                      <% for (product of allProductsByDayGrouped) { %>
                      <table class="table table-borderless table-hover table-centered table-nowrap mb-0 dashboard-table-ventedetail">
                        <tbody>
                          <tr class="thumb_vente">
                            <td>
                              <div class="product-image">
                                <img src="<%= product.produit?.image %>" alt="" class="thumb" />
                              </div>
                            </td>
                            <td>
                              <h5 class="font-size-15 mb-1 font-weight-normal"><%= product.prix_vente %> <%= currency %></h5>
                              <span class="text-muted font-size-12">vente total</span>
                            </td>
                            <td>
                              <h5 class="font-size-17 mb-1 font-weight-normal"><%= product.quantite %></h5>
                              <span class="text-muted font-size-12">nombre vendu</span>
                            </td>
                            <td>
                              <h5 class="font-size-15 mb-1 font-weight-normal"><%= product.produit?.nom_produit %></h5>
                              <span class="text-muted font-size-12"><%= product.taille %></span>
                            </td>
                          </tr>
                        </tbody>
                      </table>
                      <% } %>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <!-- container-fluid -->
        </div>
        <!-- End Page-content -->

        <footer class="footer">
          <div class="container-fluid">
            <div class="row">
              <div class="col-sm-6">
                <!-- insert la constante year -->
                <%= year %> © HNM.
              </div>
              <div class="col-sm-6">
                <div class="text-sm-right d-none d-sm-block">Design & HNM</div>
              </div>
            </div>
          </div>
        </footer>
      </div>
      <!-- end main content-->
    </div>
    <div class="menu-overlay"></div>
    <style>
      .sidebar .logo .large_logo img {
        width: 70%;
        margin-left: 15%;
      }

      .white_card_body {
        position: relative;
      }

      .loader_container {
        position: absolute;
        inset: 0;
        background-color: rgba(255, 255, 255, 0.5);
        z-index: 1000;
        display: flex;
        justify-content: center;
        align-items: center;
        display: none;
      }

      .loader {
        border: 10px solid #f3f3f3;
        border-radius: 50%;
        border-top: 10px solid #ff9c2c;
        width: 50px;
        height: 50px;
        -webkit-animation: spin 0.8s linear infinite;
        /* Safari */
        animation: spin 0.8s linear infinite;
      }

      /* Safari */

      @-webkit-keyframes spin {
        0% {
          -webkit-transform: rotate(0deg);
        }

        100% {
          -webkit-transform: rotate(360deg);
        }
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }

        100% {
          transform: rotate(360deg);
        }
      }

      .new-year-countdown {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        background: rgba(255, 255, 255, 0.95);
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .countdown-content {
        color: #333;
      }

      .countdown-content h2 {
        margin-bottom: 10px;
        font-size: 1.2em;
        color: #ff9c2c;
      }

      #countdown-display {
        font-size: 1.1em;
        font-weight: bold;
      }

      #countdown-display span {
        color: #ff9c2c;
        padding: 0 5px;
      }

      @media (max-width: 768px) {
        .new-year-countdown {
          position: relative;
          top: 0;
          right: 0;
          margin: 10px;
        }
      }

      canvas#confetti-canvas {
        position: fixed !important;
        inset: 0 !important;
        width: 100% !important;
        height: 100% !important;
        z-index: 999 !important;
        pointer-events: none;
      }

      /* HEADER */
      .dashboard-header {
        margin-bottom: 32px;
        padding: 24px 0 8px 0;
        border-radius: 18px;
        background: linear-gradient(90deg, #fff7e6 0%, #ffe5b4 100%);
        box-shadow: 0 4px 24px rgba(255, 156, 44, 0.07);
        text-align: left;
        animation: fadeInDown 0.7s;
      }
      .dashboard-title-row {
        display: flex;
        align-items: center;
        gap: 18px;
      }
      .dashboard-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: #ff9c2c;
        margin: 0;
        letter-spacing: -1px;
      }
      .dashboard-badge {
        background: #ff3c00;
        color: #fff;
        font-size: 1rem;
        font-weight: 600;
        border-radius: 12px;
        padding: 4px 16px;
        margin-left: 8px;
        vertical-align: middle;
        box-shadow: 0 2px 8px rgba(255, 69, 0, 0.13);
      }
      .dashboard-subtitle {
        color: #666;
        font-size: 1.15rem;
        margin-top: 8px;
        margin-left: 4px;
      }

      /* CARTES STATISTIQUES */
      .dashboard-stats-row {
        margin-bottom: 36px;
        gap: 0;
      }
      .dashboard-card {
        min-height: 170px;
        height: 170px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: flex-start;
        border-radius: 18px;
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.08);
        padding: 28px 22px 22px 22px;
        margin-bottom: 24px;
        transition: box-shadow 0.2s, transform 0.2s;
        cursor: pointer;
        color: #fff;
        position: relative;
        overflow: hidden;
      }
      .dashboard-card:hover {
        box-shadow: 0 8px 32px rgba(255, 156, 44, 0.18);
        transform: translateY(-4px) scale(1.03);
      }
      .dashboard-card .dashboard-card-icon {
        margin-bottom: 12px;
        background: none;
        box-shadow: none;
        min-width: 48px;
        min-height: 48px;
      }
      .dashboard-card .dashboard-card-label {
        color: #fff;
        font-size: 1.08rem;
        font-weight: 500;
        margin-bottom: 2px;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.13);
        font-family: "Poppins", sans-serif;
      }
      .dashboard-card .dashboard-card-value {
        font-size: 2rem;
        font-weight: 700;
        color: #fff;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.13);
        font-family: "Poppins", sans-serif;
      }
      .vente-jour {
        color: #fff;
        font-family: "Poppins", sans-serif;
      }

      .produit-plus-vendu {
        font-size: 1.2rem;
        font-weight: bold;
        color: #fff;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.13);
        font-family: "Poppins", sans-serif;
      }
      .chiffre-affaires-semaine {
        font-size: 1.8rem;
        font-weight: bold;
        color: #fff;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.13);
        font-family: "Poppins", sans-serif;
      }
      .dashboard-card .dashboard-card-product span {
        color: #fff;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.13);
      }
      .dashboard-card-bg-orange {
        background: linear-gradient(135deg, #ff9c2c 0%, #ffb347 100%);
      }
      .dashboard-card-bg-green {
        background: linear-gradient(135deg, #3ed66c 0%, #1abc9c 100%);
      }
      .dashboard-card-bg-yellow {
        background: linear-gradient(135deg, #ffe259 0%, #ffa751 100%);
      }
      .dashboard-card-bg-blue {
        background: linear-gradient(135deg, #2cbcff 0%, #1e90ff 100%);
      }
      .dashboard-product-img {
        width: 38px;
        height: 38px;
        object-fit: contain;
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
      }
      @media (max-width: 991px) {
        .dashboard-card {
          min-height: 140px;
          height: 140px;
        }
      }
      @media (max-width: 767px) {
        .dashboard-card {
          min-height: 110px;
          height: 110px;
          padding: 12px 8px;
        }
        .dashboard-card .dashboard-card-value {
          font-size: 1.2rem;
        }
      }

      /* ANIMATIONS */
      @keyframes fadeInDown {
        from {
          opacity: 0;
          transform: translateY(-20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(20px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
      .animated-fadeInDown {
        animation: fadeInDown 0.7s;
      }
      .animated-fadeInUp {
        animation: fadeInUp 0.7s;
      }
      .card-animated {
        animation: fadeInUp 0.7s;
      }

      .animated-counter {
        transition: color 0.3s;
      }
      .animated-counter:hover {
        color: #ff9c2c;
      }

      @media (max-width: 991px) {
        .dashboard-header {
          text-align: center;
        }
        .dashboard-title-row {
          flex-direction: column;
          gap: 8px;
        }
        .dashboard-stats-row {
          flex-direction: column;
        }
      }
      @media (max-width: 767px) {
        .dashboard-header {
          padding: 16px 0 4px 0;
        }
        .dashboard-title {
          font-size: 1.3rem;
        }
        .dashboard-card {
          flex-direction: column;
          align-items: flex-start;
          min-height: 90px;
          padding: 18px 10px;
        }
        .dashboard-card-icon {
          min-width: 48px;
          min-height: 48px;
          padding: 8px;
        }
        .dashboard-card-value {
          font-size: 1.2rem;
        }
      }

      .dashboard-ventes-row {
        margin-bottom: 36px;
        display: flex;
        flex-wrap: wrap;
        gap: 0;
      }
      .dashboard-block {
        background: #fff;
        border-radius: 18px;
        box-shadow: 0 4px 18px rgba(0,0,0,0.08);
        padding: 22px 18px 18px 18px;
        min-height: 320px;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        transition: box-shadow 0.2s, transform 0.2s;
        position: relative;
        margin-bottom: 0;
      }
      .dashboard-block:hover {
        box-shadow: 0 8px 32px rgba(44, 62, 80, 0.13);
        transform: translateY(-4px) scale(1.02);
      }
      .dashboard-block-header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 18px;
      }
      .dashboard-block-title {
        font-size: 1.18rem;
        font-weight: 700;
        color: #ff9c2c;
        letter-spacing: -0.5px;
        display: flex;
        align-items: center;
        gap: 8px;
      }
      .dashboard-block-filters {
        display: flex;
        gap: 8px;
      }
      .dashboard-block-ventes {
        background: linear-gradient(135deg, #fff7e6 0%, #ffe5b4 100%);
        min-height: 320px;
      }
      .dashboard-block-commandes {
        background: linear-gradient(135deg, #e6f7ff 0%, #b4e5ff 100%);
        min-height: 320px;
      }

      /* Styles pour les onglets des graphiques */
      .chart-tabs {
        display: flex;
        gap: 8px;
        margin-bottom: 16px;
      }

      .chart-tab {
        background: rgba(255, 156, 44, 0.1);
        border: 2px solid transparent;
        color: #FF9C2C;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 6px;
      }

      .chart-tab:hover {
        background: rgba(255, 156, 44, 0.2);
        transform: translateY(-1px);
      }

      .chart-tab.active {
        background: #FF9C2C;
        color: white;
        border-color: #FF9C2C;
        box-shadow: 0 2px 8px rgba(255, 156, 44, 0.3);
      }

      .chart-container {
        position: relative;
        min-height: 400px;
      }

      .chart-active {
        display: block;
        animation: fadeIn 0.3s ease-in;
      }

      .chart-hidden {
        display: none;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(10px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      /* Styles pour le classement des employés */
      .dashboard-block-classement-employes {
        background: linear-gradient(135deg, #2FD8F2 0%, #2FD8F2 50%, #1390a3 100%);
        border-radius: 16px;
        padding: 24px;
        box-shadow: 0 8px 32px rgba(231, 76, 60, 0.3);
        position: relative;
        overflow: hidden;
        min-height: 500px;
        
      }

      /* Styles pour le meilleur employé - même taille */
      .dashboard-block-meilleur-employe {
        background: linear-gradient(135deg, #2FD8F2 0%, #2FD8F2 50%, #2198aa 100%);
        border-radius: 16px;
        padding: 24px;
        box-shadow: 0 8px 32px rgba(52, 152, 219, 0.3);
        position: relative;
        overflow: hidden;
        min-height: 500px;
        
      }

      .dashboard-block-meilleur-employe::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
        pointer-events: none;
      }

      .dashboard-block-classement-employes::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.05) 100%);
        pointer-events: none;
      }

      .classement-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        position: relative;
        z-index: 2;
      }

      .classement-title {
        display: flex;
        align-items: center;
        gap: 12px;
      }

      .classement-title h3 {
        color: white;
        font-size: 1.4rem;
        font-weight: 700;
        margin: 0;
        text-shadow: 0 2px 4px rgba(0,0,0,0.3);
      }

      .classement-badge {
        background: rgba(255, 255, 255, 0.2);
        border-radius: 25px;
        padding: 8px 18px;
        backdrop-filter: blur(10px);
        box-shadow: 0 2px 8px rgba(255, 255, 255, 0.1);
      }

      .classement-badge .badge-text {
        color: white;
        font-size: 0.85rem;
        font-weight: 600;
      }

      .classement-content {
        position: relative;
        z-index: 2;
      }

             .classement-list {
         max-height: 200px;
         overflow-y: auto;
         margin-bottom: 16px;
         flex: 1;
       }

       .meilleur-employe-content {
         display: flex;
         flex-direction: column;
         height: 100%;
         justify-content: space-between;
       }

       .employe-profile {
         flex: 1;
         display: flex;
         flex-direction: column;
         justify-content: center;
         animation: fadeInUp 1s ease-out 0.5s both;
       }

       .employe-stats {
         animation: fadeInUp 1s ease-out 0.8s both;
       }

       .employe-stats .stat-item {
         animation: fadeInScale 0.6s ease-out both;
       }

       .employe-stats .stat-item:nth-child(1) { animation-delay: 1s; }
       .employe-stats .stat-item:nth-child(2) { animation-delay: 1.2s; }
       .employe-stats .stat-item:nth-child(3) { animation-delay: 1.4s; }
       .employe-stats .stat-item:nth-child(4) { animation-delay: 1.6s; }

       .employe-progress {
         animation: fadeInUp 1s ease-out 1.8s both;
       }

       .classement-content {
         animation: fadeInUp 1s ease-out 0.5s both;
       }

       .countdown-container {
         animation: pulseIn 1s ease-out 0.8s both;
       }

       .classement-list {
         animation: fadeInUp 1s ease-out 1s both;
       }

       .classement-footer {
         animation: fadeInUp 1s ease-out 1.5s both;
       }

       @keyframes fadeInUp {
         0% {
           opacity: 0;
           transform: translateY(30px);
         }
         100% {
           opacity: 1;
           transform: translateY(0);
         }
       }

       @keyframes fadeInScale {
         0% {
           opacity: 0;
           transform: scale(0.8);
         }
         100% {
           opacity: 1;
           transform: scale(1);
         }
       }

       @keyframes pulseIn {
         0% {
           opacity: 0;
           transform: scale(0.9);
         }
         50% {
           opacity: 0.7;
           transform: scale(1.05);
         }
         100% {
           opacity: 1;
           transform: scale(1);
         }
       }

      .classement-list::-webkit-scrollbar {
        width: 6px;
      }

      .classement-list::-webkit-scrollbar-track {
        background: rgba(255, 255, 255, 0.1);
        border-radius: 3px;
      }

      .classement-list::-webkit-scrollbar-thumb {
        background: rgba(255, 255, 255, 0.3);
        border-radius: 3px;
      }

      .classement-item {
        display: flex;
        align-items: center;
        padding: 12px 16px;
        margin-bottom: 8px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 20px;
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
      }

      .classement-item:hover {
        background: rgba(255, 255, 255, 0.15);
        transform: translateX(4px);
      }

      .classement-item.first {
        background: linear-gradient(135deg, rgba(255, 215, 0, 0.3) 0%, rgba(255, 193, 7, 0.2) 100%);
        border: 1px solid rgba(255, 215, 0, 0.4);
      }

      .classement-item.second {
        background: linear-gradient(135deg, rgba(192, 192, 192, 0.3) 0%, rgba(169, 169, 169, 0.2) 100%);
        border: 1px solid rgba(192, 192, 192, 0.4);
      }

      .classement-item.third {
        background: linear-gradient(135deg, rgba(205, 127, 50, 0.3) 0%, rgba(184, 115, 51, 0.2) 100%);
        border: 1px solid rgba(205, 127, 50, 0.4);
      }

      .classement-rank {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        font-size: 0.9rem;
        margin-right: 12px;
        position: relative;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
      }

      .classement-rank.first {
        background: linear-gradient(135deg, #FFD700, #FFA500);
        color: #333;
        box-shadow: 0 4px 12px rgba(255, 215, 0, 0.4);
      }

      .classement-rank.second {
        background: linear-gradient(135deg, #C0C0C0, #A9A9A9);
        color: #333;
        box-shadow: 0 4px 12px rgba(192, 192, 192, 0.4);
      }

      .classement-rank.third {
        background: linear-gradient(135deg, #CD7F32, #B87333);
        color: white;
        box-shadow: 0 4px 12px rgba(205, 127, 50, 0.4);
      }

      .classement-rank.other {
        background: rgba(255, 255, 255, 0.2);
        color: white;
      }

      .classement-rank::after {
        content: '';
        position: absolute;
        top: -2px;
        left: -2px;
        right: -2px;
        bottom: -2px;
        border-radius: 50%;
        background: linear-gradient(45deg, transparent, rgba(255,255,255,0.3), transparent);
        opacity: 0;
        transition: opacity 0.3s ease;
      }

      .classement-item:hover .classement-rank::after {
        opacity: 1;
      }

      .classement-employe-info {
        flex: 1;
        display: flex;
        align-items: center;
        gap: 12px;
      }

      .classement-avatar {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        color: white;
        font-size: 0.9rem;
        position: relative;
        box-shadow: 0 3px 10px rgba(102, 126, 234, 0.3);
      }

      .classement-avatar.first::after {
        content: '👑';
        position: absolute;
        top: -8px;
        right: -4px;
        font-size: 14px;
        animation: bounce 2s infinite;
      }

      .classement-details {
        flex: 1;
      }

      .classement-name {
        color: white;
        font-weight: 600;
        font-size: 0.95rem;
        margin: 0 0 2px 0;
      }

      .classement-role {
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.8rem;
        margin: 0;
      }

      .classement-stats {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        gap: 4px;
      }

      .classement-ca {
        color: #FFD700;
        font-weight: 700;
        font-size: 0.9rem;
      }

      .classement-commandes {
        color: rgba(255, 255, 255, 0.8);
        font-size: 0.8rem;
      }

      .classement-footer {
        border-top: 1px solid rgba(255, 255, 255, 0.2);
        padding-top: 16px;
        text-align: center;
      }

      .challenge-text {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        color: rgba(255, 255, 255, 0.9);
        font-size: 0.9rem;
        font-weight: 500;
      }

             .challenge-text i {
         color: #FFD700;
         animation: pulse 2s infinite;
       }

       /* Styles pour le compte à rebours */
       .countdown-container {
         background: rgba(255, 255, 255, 0.1);
         border-radius: 16px;
         padding: 16px;
         margin-bottom: 20px;
         backdrop-filter: blur(10px);
         border: 1px solid rgba(255, 255, 255, 0.2);
       }

       .countdown-title {
         display: flex;
         align-items: center;
         justify-content: center;
         gap: 8px;
         color: white;
         font-size: 0.9rem;
         font-weight: 600;
         margin-bottom: 12px;
       }

       .countdown-title i {
         color: #FFD700;
         animation: pulse 1.5s infinite;
       }

       .countdown-timer {
         display: flex;
         align-items: center;
         justify-content: center;
         gap: 8px;
       }

       .countdown-item {
         display: flex;
         flex-direction: column;
         align-items: center;
         background: rgba(255, 255, 255, 0.15);
         border-radius: 12px;
         padding: 8px 12px;
         min-width: 50px;
         backdrop-filter: blur(5px);
         border: 1px solid rgba(255, 255, 255, 0.1);
       }

       .countdown-number {
         color: #FFD700;
         font-size: 1.2rem;
         font-weight: 700;
         line-height: 1;
         text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
       }

       .countdown-label {
         color: rgba(255, 255, 255, 0.8);
         font-size: 0.7rem;
         font-weight: 500;
         margin-top: 2px;
       }

       .countdown-separator {
         color: #FFD700;
         font-size: 1.5rem;
         font-weight: 700;
         margin: 0 4px;
         animation: blink 1s infinite;
       }

       @keyframes blink {
         0%, 50% { opacity: 1; }
         51%, 100% { opacity: 0.3; }
       }

       .reset-info {
         display: flex;
         align-items: center;
         justify-content: center;
         gap: 6px;
         color: rgba(255, 255, 255, 0.7);
         font-size: 0.8rem;
         margin-top: 8px;
         padding-top: 8px;
         border-top: 1px solid rgba(255, 255, 255, 0.1);
       }

       .reset-info i {
         color: #FFD700;
         font-size: 0.7rem;
       }

       /* Animation urgente pour le compte à rebours */
       .countdown-container.urgent {
         animation: urgentPulse 1s infinite;
         border-color: #FF6B6B;
       }

       .countdown-container.urgent .countdown-number {
         color: #FF6B6B;
         animation: urgentBlink 0.5s infinite;
       }

       @keyframes urgentPulse {
         0%, 100% { 
           box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.4);
         }
         50% { 
           box-shadow: 0 0 0 10px rgba(255, 107, 107, 0);
         }
       }

       @keyframes urgentBlink {
         0%, 50% { opacity: 1; }
         51%, 100% { opacity: 0.5; }
       }

       /* Animations pour les changements de position */
       .classement-item.ranking-up {
         animation: rankingUp 0.8s ease-out;
         transform: scale(1.05);
         box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);
       }

       .classement-item.ranking-down {
         animation: rankingDown 0.6s ease-out;
         opacity: 0.7;
       }

       .classement-item.new-position-up {
         animation: newPositionUp 0.5s ease-out;
         border: 2px solid #FFD700;
       }

       .classement-item.new-position-down {
         animation: newPositionDown 0.5s ease-out;
         border: 2px solid #FF6B6B;
       }

       .classement-rank.pulse-gold {
         animation: pulseGold 0.8s ease-out;
         transform: scale(1.2);
       }

       @keyframes rankingUp {
         0% {
           transform: scale(1) translateY(0);
           box-shadow: 0 4px 15px rgba(255, 255, 255, 0.1);
         }
         50% {
           transform: scale(1.1) translateY(-10px);
           box-shadow: 0 12px 35px rgba(255, 215, 0, 0.6);
         }
         100% {
           transform: scale(1.05) translateY(0);
           box-shadow: 0 8px 25px rgba(255, 215, 0, 0.4);
         }
       }

       @keyframes rankingDown {
         0% {
           transform: scale(1) translateY(0);
           opacity: 1;
         }
         50% {
           transform: scale(0.95) translateY(5px);
           opacity: 0.5;
         }
         100% {
           transform: scale(1) translateY(0);
           opacity: 0.7;
         }
       }

       @keyframes newPositionUp {
         0% {
           transform: translateY(-20px);
           opacity: 0;
           border-color: #FFD700;
         }
         50% {
           transform: translateY(-5px);
           opacity: 0.8;
           border-color: #FFD700;
         }
         100% {
           transform: translateY(0);
           opacity: 1;
           border-color: transparent;
         }
       }

       @keyframes newPositionDown {
         0% {
           transform: translateY(20px);
           opacity: 0;
           border-color: #FF6B6B;
         }
         50% {
           transform: translateY(5px);
           opacity: 0.8;
           border-color: #FF6B6B;
         }
         100% {
           transform: translateY(0);
           opacity: 1;
           border-color: transparent;
         }
       }

       @keyframes pulseGold {
         0% {
           transform: scale(1);
           box-shadow: 0 4px 12px rgba(255, 215, 0, 0.4);
         }
         50% {
           transform: scale(1.3);
           box-shadow: 0 8px 20px rgba(255, 215, 0, 0.8);
         }
         100% {
           transform: scale(1.2);
           box-shadow: 0 6px 16px rgba(255, 215, 0, 0.6);
         }
       }

       /* Effet de particules */
       .ranking-particle {
         position: absolute;
         width: 6px;
         height: 6px;
         border-radius: 50%;
         pointer-events: none;
         z-index: 10;
         animation: particleFloat 2s ease-out forwards;
       }

       @keyframes particleFloat {
         0% {
           transform: translateY(0) scale(1);
           opacity: 1;
         }
         50% {
           transform: translateY(-30px) scale(1.5);
           opacity: 0.8;
         }
         100% {
           transform: translateY(-60px) scale(0.5);
           opacity: 0;
         }
       }

             @keyframes pulse {
         0%, 100% { transform: scale(1); }
         50% { transform: scale(1.1); }
       }

       .no-data-message {
         text-align: center;
         padding: 40px 20px;
         color: rgba(255, 255, 255, 0.8);
       }

       .no-data-message i {
         font-size: 3rem;
         margin-bottom: 16px;
         opacity: 0.6;
       }

       .no-data-message p {
         font-size: 1rem;
         margin: 0;
         font-weight: 500;
       }

             /* Styles pour les cartes en pleine largeur */
       .dashboard-block-meilleur-employe,
       .dashboard-block-classement-employes {
         display: flex;
         flex-direction: column;
         justify-content: space-between;
         height: 400px;
         min-height: 400px;
         width: 100%;
         margin: 0;
       }

       /* Animation d'apparition pour les cartes */
       .dashboard-block-meilleur-employe {
         animation: slideInFromLeft 0.8s ease-out;
       }

       .dashboard-block-classement-employes {
         animation: slideInFromRight 0.8s ease-out 0.2s both;
       }

       @keyframes slideInFromLeft {
         0% {
           opacity: 0;
           transform: translateX(-100px);
         }
         100% {
           opacity: 1;
           transform: translateX(0);
         }
       }

       @keyframes slideInFromRight {
         0% {
           opacity: 0;
           transform: translateX(100px);
         }
         100% {
           opacity: 1;
           transform: translateX(0);
         }
       }

       .dashboard-block-meilleur-employe .meilleur-employe-content,
       .dashboard-block-classement-employes .classement-content {
         flex: 1;
         display: flex;
         flex-direction: column;
         justify-content: space-between;
       }

       /* Alignement des cartes côte à côte */
       .dashboard-meilleur-employe-row .col-lg-6 {
         display: flex;
         flex-direction: column;
       }

       .dashboard-meilleur-employe-row .col-lg-6 > div {
         flex: 1;
         display: flex;
         flex-direction: column;
       }

       /* Responsive pour le classement */
       @media (max-width: 768px) {
        .dashboard-block-classement-employes {
          min-height: 350px;
        }
        
        .classement-list {
          max-height: 220px;
        }
        
        .classement-item {
          padding: 10px 12px;
        }
        
        .classement-rank {
          width: 28px;
          height: 28px;
          font-size: 0.8rem;
        }
        
        .classement-avatar {
          width: 32px;
          height: 32px;
          font-size: 0.8rem;
        }
      }

      /* Styles pour le bouton d'assistance WhatsApp */
      .whatsapp-help-button {
        position: fixed;
        bottom: 30px;
        right: 30px;
        z-index: 1000;
        cursor: pointer;
        transition: all 0.3s ease;
        animation: bounce 2s infinite;
      }

      .whatsapp-help-button:hover {
        transform: scale(1.1);
        animation: none;
      }

      .whatsapp-help-button.clicked {
        transform: scale(0.95);
      }

      .help-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, #25D366, #128C7E);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 4px 20px rgba(37, 211, 102, 0.3);
        transition: all 0.3s ease;
      }

      .help-icon i {
        font-size: 28px;
        color: white;
      }

      .help-tooltip {
        position: absolute;
        right: 70px;
        top: 50%;
        transform: translateY(-50%);
        background: white;
        color: #333;
        padding: 8px 12px;
        border-radius: 8px;
        font-size: 14px;
        font-weight: 500;
        white-space: nowrap;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s ease;
        border: 1px solid #e0e0e0;
      }

      .help-tooltip::after {
        content: '';
        position: absolute;
        right: -6px;
        top: 50%;
        transform: translateY(-50%);
        border-width: 6px 0 6px 6px;
        border-style: solid;
        border-color: transparent transparent transparent white;
      }

      .whatsapp-help-button:hover .help-tooltip {
        opacity: 1;
        visibility: visible;
        right: 80px;
      }

      @keyframes bounce {
        0%, 20%, 50%, 80%, 100% {
          transform: translateY(0);
        }
        40% {
          transform: translateY(-10px);
        }
        60% {
          transform: translateY(-5px);
        }
      }

      /* Responsive pour mobile */
      @media (max-width: 768px) {
        .whatsapp-help-button {
          bottom: 20px;
          right: 20px;
        }
        
        .help-icon {
          width: 50px;
          height: 50px;
        }
        
        .help-icon i {
          font-size: 24px;
        }
        
        .help-tooltip {
          right: 60px;
          font-size: 12px;
          padding: 6px 10px;
        }
        
        .whatsapp-help-button:hover .help-tooltip {
          right: 70px;
        }
      }

      /* Styles pour la section Meilleur Employé */
      .dashboard-block-meilleur-employe {
        background: linear-gradient(135deg, #FF9C2C 0%, #FFD700 100%);
        border-radius: 20px;
        padding: 30px;
        color: white;
        box-shadow: 0 10px 30px rgba(102, 126, 234, 0.3);
        position: relative;
        overflow: hidden;
        animation: slideInFromTop 0.8s ease-out;
      }

      .dashboard-block-meilleur-employe::before {
        content: '';
        position: absolute;
        top: -50%;
        right: -50%;
        width: 200%;
        height: 200%;
        background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
        animation: rotate 20s linear infinite;
      }

      @keyframes slideInFromTop {
        from {
          opacity: 0;
          transform: translateY(-30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
      }

      .meilleur-employe-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 25px;
        position: relative;
        z-index: 2;
      }

      .meilleur-employe-title {
        display: flex;
        align-items: center;
        gap: 12px;
      }

      .meilleur-employe-title h3 {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 700;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }

      .meilleur-employe-badge {
        background: rgba(255,255,255,0.2);
        padding: 8px 16px;
        border-radius: 20px;
        backdrop-filter: blur(10px);
      }

      .badge-text {
        font-weight: 600;
        font-size: 0.9rem;
      }

      .meilleur-employe-content {
        position: relative;
        z-index: 2;
      }

      .employe-profile {
        display: flex;
        align-items: center;
        gap: 25px;
        margin-bottom: 25px;
      }

      .employe-avatar {
        position: relative;
        flex-shrink: 0;
      }

      .avatar-circle {
        width: 80px;
        height: 80px;
        background: linear-gradient(135deg, #ffd700, #ffed4e);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: 0 8px 20px rgba(255, 215, 0, 0.3);
        animation: pulse 2s infinite;
      }

      @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.05); }
      }

      .avatar-initials {
        font-size: 1.8rem;
        font-weight: 700;
        color: #333;
      }

      .crown-icon {
        position: absolute;
        top: -10px;
        right: -10px;
        font-size: 1.5rem;
        animation: bounce 2s infinite;
      }

      @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
      }

      .employe-info {
        flex: 1;
      }

      .employe-name {
        font-size: 1.4rem;
        font-weight: 700;
        margin: 0 0 5px 0;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
      }

      .employe-role {
        color: rgba(255,255,255,0.8);
        margin: 0 0 20px 0;
        font-size: 1rem;
      }

      .employe-stats {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 15px;
      }

      .stat-item {
        display: flex;
        align-items: center;
        gap: 12px;
        background: rgba(255,255,255,0.1);
        padding: 15px;
        border-radius: 12px;
        backdrop-filter: blur(10px);
        transition: transform 0.3s ease;
      }

      .stat-item:hover {
        transform: translateY(-2px);
        background: rgba(255,255,255,0.15);
      }

      .stat-icon {
        font-size: 1.5rem;
        flex-shrink: 0;
      }

      .stat-content {
        flex: 1;
      }

      .stat-value {
        font-size: 1.2rem;
        font-weight: 700;
        margin-bottom: 2px;
      }

      .stat-label {
        font-size: 0.85rem;
        color: rgba(255,255,255,0.8);
      }

      .employe-progress {
        margin-top: 20px;
      }

      .progress-container {
        background: rgba(255,255,255,0.1);
        border-radius: 10px;
        padding: 20px;
        backdrop-filter: blur(10px);
      }

      .progress-bar {
        width: 100%;
        height: 12px;
        background: rgba(255,255,255,0.2);
        border-radius: 6px;
        overflow: hidden;
        margin-bottom: 10px;
      }

      .progress-fill {
        height: 100%;
        background: linear-gradient(90deg, #98ED58, #98ED58);
        border-radius: 6px;
        transition: width 1.5s ease-out;
        animation: progressGlow 2s infinite;
      }

      @keyframes progressGlow {
        0%, 100% { box-shadow: 0 0 5px rgba(255, 215, 0, 0.5); }
        50% { box-shadow: 0 0 20px rgba(255, 215, 0, 0.8); }
      }

      .progress-text {
        text-align: center;
        font-size: 0.9rem;
        color: rgba(255,255,255,0.9);
        font-weight: 500;
      }

      /* Responsive pour la section Meilleur Employé */
      @media (max-width: 768px) {
        .dashboard-block-meilleur-employe {
          padding: 20px;
        }

        .employe-profile {
          flex-direction: column;
          text-align: center;
          gap: 20px;
        }

        .employe-stats {
          grid-template-columns: 1fr;
          gap: 10px;
        }

        .meilleur-employe-title h3 {
          font-size: 1.2rem;
        }

        .avatar-circle {
          width: 60px;
          height: 60px;
        }

        .avatar-initials {
          font-size: 1.4rem;
        }
      }

      /* Styles pour la modal WhatsApp */
      .whatsapp-modal {
        display: none;
        position: fixed;
        z-index: 2000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        animation: fadeIn 0.3s ease;
      }

      .whatsapp-modal-content {
        background-color: white;
        margin: 10% auto;
        padding: 0;
        border-radius: 12px;
        width: 90%;
        max-width: 400px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
        animation: slideIn 0.3s ease;
      }

      @keyframes slideIn {
        from {
          opacity: 0;
          transform: translateY(-50px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .whatsapp-modal-header {
        background: linear-gradient(135deg, #25D366, #128C7E);
        color: white;
        padding: 20px;
        border-radius: 12px 12px 0 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      .whatsapp-modal-header h3 {
        margin: 0;
        font-size: 18px;
        display: flex;
        align-items: center;
        gap: 8px;
      }

      .whatsapp-modal-close {
        color: white;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
        transition: opacity 0.3s;
      }

      .whatsapp-modal-close:hover {
        opacity: 0.7;
      }

      .whatsapp-modal-body {
        padding: 20px;
      }

      .whatsapp-modal-body p {
        margin: 0 0 15px 0;
        color: #666;
        font-size: 14px;
      }

      .whatsapp-numbers {
        display: flex;
        flex-direction: column;
        gap: 10px;
      }

      .whatsapp-number {
        display: flex;
        align-items: center;
        gap: 12px;
        padding: 12px;
        border: 2px solid #e0e0e0;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        background: #f8f9fa;
      }

      .whatsapp-number:hover {
        border-color: #25D366;
        background: rgba(37, 211, 102, 0.1);
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(37, 211, 102, 0.2);
      }

      .whatsapp-number i {
        font-size: 20px;
        color: #25D366;
      }

      .whatsapp-number span {
        font-weight: 600;
        color: #333;
        font-size: 14px;
      }

      .whatsapp-number small {
        color: #666;
        font-size: 12px;
        margin-left: auto;
      }

      .dashboard-block-objectif {
        background: linear-gradient(135deg, #e0ffe6 0%, #b2f7cc 100%);
        min-height: 320px;
        align-items: center;
        justify-content: center;
      }
      .dashboard-block-rupture {
        background: linear-gradient(135deg, #fff0e0 0%, #ffd6b4 100%);
        min-height: 320px;
      }
      .objectif-radial {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        gap: 10px;
        margin-top: 18px;
      }
      .rupture-img {
        width: 32px;
        height: 32px;
        object-fit: contain;
        border-radius: 8px;
        margin-right: 8px;
        box-shadow: 0 2px 8px rgba(255,156,44,0.08);
      }
      .rupture-nom {
        font-size: 1.05rem;
        font-weight: 500;
        color: #e67e22;
      }
      .rupture-quantite {
        color: #e74c3c;
        font-weight: bold;
      }
      .rupture-taille {
        color: #888;
        font-size: 0.98rem;
      }
      .dashboard-table-rupture th, .dashboard-table-rupture td {
        border: none;
        background: transparent;
      }
      @media (max-width: 991px) {
        .dashboard-ventes-row > div { margin-bottom: 18px; }
        .dashboard-block { min-height: 220px; }
      }
      @media (max-width: 767px) {
        .dashboard-ventes-row { flex-direction: column; }
        .dashboard-ventes-row > div { width: 100% !important; max-width: 100%; }
        .dashboard-block { min-height: 180px; padding: 12px 6px; }
        .dashboard-block-title { font-size: 1rem; }
      }

      /* Styles pour les tooltips personnalisés */
      .apexcharts-tooltip {
        border: none !important;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15) !important;
        border-radius: 12px !important;
        background: white !important;
      }

      .custom-tooltip {
        animation: tooltipFadeIn 0.3s ease-out;
      }

      @keyframes tooltipFadeIn {
        from {
          opacity: 0;
          transform: translateY(10px) scale(0.95);
        }
        to {
          opacity: 1;
          transform: translateY(0) scale(1);
        }
      }

      /* Amélioration de l'interactivité du graphique */
      .apexcharts-canvas {
        cursor: pointer;
      }

      .apexcharts-bar-area:hover {
        opacity: 0.8;
        transition: opacity 0.2s ease;
      }

      /* Style pour les icônes dans les tooltips */
      .custom-tooltip i {
        width: 16px;
        text-align: center;
      }

      /* Style pour l'indicateur de tooltip */
      .tooltip-hint {
        cursor: help;
        transition: transform 0.2s ease;
      }

      .tooltip-hint:hover {
        transform: scale(1.1);
      }

      .dashboard-inventaire-row {
        margin-bottom: 36px;
        display: flex;
        flex-wrap: wrap;
        gap: 0;
      }
      .dashboard-block-inventaire {
        background: linear-gradient(135deg, #e0f7fa 0%, #fffde4 100%);
        min-height: 320px;
      }
      .dashboard-block-ventedetail {
        background: linear-gradient(135deg, #fceabb 0%, #f8b500 100%);
        min-height: 320px;
      }
      .inventaire-img {
        width: 32px;
        height: 32px;
        object-fit: contain;
        border-radius: 8px;
        margin-right: 8px;
        box-shadow: 0 2px 8px rgba(44,62,80,0.08);
      }
      .inventaire-nom {
        font-size: 1.05rem;
        font-weight: 500;
        color: #0097a7;
      }
      .inventaire-quantite {
        color: #27ae60;
        font-weight: bold;
      }
      .inventaire-quantite-low {
        color: #e74c3c;
      }
      .dashboard-table-inventaire th, .dashboard-table-inventaire td {
        border: none;
        background: transparent;
      }
      .dashboard-table-ventedetail th, .dashboard-table-ventedetail td {
        border: none;
        background: transparent;
      }
      @media (max-width: 991px) {
        .dashboard-inventaire-row > div { margin-bottom: 18px; }
        .dashboard-block { min-height: 220px; }
      }
      @media (max-width: 767px) {
        .dashboard-inventaire-row { flex-direction: column; }
        .dashboard-inventaire-row > div { width: 100% !important; max-width: 100%; }
        .dashboard-block { min-height: 180px; padding: 12px 6px; }
        .dashboard-block-title { font-size: 1rem; }
      }
    </style>

    <!-- Begin page -->
    <%- include('partial/newSideBar.ejs') %>
    <!--/ sidebar  -->

    <!-- Bouton d'assistance WhatsApp flottant -->
    <div class="whatsapp-help-button" id="whatsappHelpBtn">
      <div class="help-icon">
        <i class="fab fa-whatsapp"></i>
      </div>
      <div class="help-tooltip">
        Besoin d'aide ? Contactez-nous sur WhatsApp
      </div>
    </div>

    <!-- Modal de sélection WhatsApp -->
    <div id="whatsappModal" class="whatsapp-modal">
      <div class="whatsapp-modal-content">
        <div class="whatsapp-modal-header">
          <h3><i class="fab fa-whatsapp"></i> Contactez-nous sur WhatsApp</h3>
          <span class="whatsapp-modal-close">&times;</span>
        </div>
        <div class="whatsapp-modal-body">
          <p>Choisissez un numéro pour nous contacter :</p>
          <div class="whatsapp-numbers">
            <div class="whatsapp-number" data-number="33760484911">
              <i class="fab fa-whatsapp"></i>
              <span>+33 0760484911</span>
              <small>Support France</small>
            </div>
            <div class="whatsapp-number" data-number="2250709454685">
              <i class="fab fa-whatsapp"></i>
              <span>+225 0709454685</span>
              <small>Support Côte d'Ivoire</small>
            </div>
            <div class="whatsapp-number" data-number="2250709031399">
              <i class="fab fa-whatsapp"></i>
              <span>+225 0709031399</span>
              <small>Support Côte d'Ivoire</small>
            </div>
            <div class="whatsapp-number" data-number="2250777129951">
              <i class="fab fa-whatsapp"></i>
              <span>+225 0777129951</span>
              <small>Support Côte d'Ivoire</small>
            </div>
            <div class="whatsapp-number" data-number="225049601753">
              <i class="fab fa-whatsapp"></i>
              <span>+225 0749601753</span>
              <small>Support Côte d'Ivoire</small>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div id="back-top" style="display: none">
      <a title="Go to Top" href="#">
        <i class="ti-angle-up"></i>
      </a>
    </div>

    <script>
                  const driver = window.driver.js.driver;
            // Définir une variable pour garder une trace si l'action a déjà été effectuée
            let guideAlreadyShown = false;

                  const currentRoute = window.location.pathname;

                  const driverObj = driver({
                    showProgress: true,
                    showAnimation: true,
                    animationDuration: 2000,
                    showButtons: true,
                    showBackButton: true,
                    showResetButton: true,
                    showCloseButton: true,
                    showNextButton: true,
                    showSkipButton: true,
                    showPrevButton: true,
                    showPauseButton: true,
                    showPlayButton: true,
                    showFullscreenButton: true,
                    popoverClass: "driverjs-theme",
                    steps: [
                      {
                        element: "#element-produit",
                        popover: {
                          title: "Ajouter vos produits",
                          description:
                            "En ajoutant les produits de votre établissement, vous aurez une visibilité complète sur l'état du stock. Ainsi, vous pourrez approvisionner à distance si vous constatez une baisse, assurant une gestion efficace et sans interruption de votre inventaire.",
                        },
                      },
                      {
                        element: "#element-employe",
                        popover: {
                          title: "Ajouter les employées de votre établissement",
                          description:
                            "En ajoutant vos employé(e)s, ceux-ci auront accès à la liste des boissons de votre établissement et pourront ainsi effectuer des prises de commandes.",
                        },
                      },
                      {
                        element: "#element-bilan",
                        popover: {
                          title: "Bilan",
                          description:
                            "La section bilan vous permet de consulter vos ventes sur toute les périodes, vous aide à prendre des décisions et vous permet de valoriser vos employés en consultant leurs performances",
                        },
                      },
                    ],
                  });
                  if (currentRoute ==="/dashboard" && (!localStorage.getItem("guideAlreadyShown") || Date.now() - parseInt(localStorage.getItem("guideAlreadyShown"), 10) > 172800000)) {
                    driverObj.drive();
                    // Mettre à jour la variable pour indiquer que le guide a été affiché
                    localStorage.setItem("guideAlreadyShown", true);
                  }
                  // currently sale

                  //const socket = io();
                  const date = new Date();
                  const month = date.getMonth() + 1;
                  const year = date.getFullYear();

                  const celebriteObjective = () => {
                    startConfetti({
                      particleCount: 100,
                      spread: 70,
                      origin: {
                        y: 0.6
                      }
                    });


                    const canvas = document.getElementsByTagName('canvas');

                    if (canvas) {
                      canvas[0].style.position = 'absolute';
                      canvas[0].style.top = '0';
                      canvas[0].style.left = '0';
                      canvas[0].style.width = '100%';
                      canvas[0].style.height = '100%';


                      setTimeout(() => {
                        stopConfetti();
                      }, 3000);

                    }
                  }
                  const ventes = <%- JSON.stringify(venteByDay) %>;
                  const objectivePercent = <%- JSON.stringify(objectivePercent) %>;
                  //     const user_travail_pour = <%- JSON.stringify(user.travail_pour) %>;
                  // const socket = io();
                  // socket.on('connect', () => {
                  //   socket.on(`${user_travail_pour}-editvente`,(data)=>{
                  //     $.notify("Vous avez une vente  !", "success");
                  //     const ventes = <%- JSON.stringify(venteByDay) %>;
                  //     const objectivePercent = <%- JSON.stringify(objectivePercent) %>;

                  //   })
                  // })
                  //  const ventes = <%- JSON.stringify(venteByDay) %>;
                  //  const objectivePercent = <%- JSON.stringify(objectivePercent) %>;


                  if (localStorage.getItem('celebriteObjective') && localStorage.getItem('celebriteObjectiveDate') != new Date().toLocaleDateString()) {
                    localStorage.removeItem('celebriteObjective');
                    localStorage.removeItem('celebriteObjectiveDate');
                  }


                  if (objectivePercent == 100 && !localStorage.getItem('celebriteObjective')) {
                    celebriteObjective();
                    localStorage.setItem('celebriteObjective', true);
                    localStorage.setItem('celebriteObjectiveDate', new Date().toLocaleDateString());
                  }


                  const filterLabelsByMonth = (data, month, year) => {
                    return Object.keys(data).filter(label => {
                      const dateSplit = label.split('/');
                      return Number(dateSplit[0]) == month && dateSplit[2] == year;
                    });
                  }


                  const filterVentesValuesByMonth = (data, month, year) => {
                    return Object.entries(data).map((vente) => {
                      return [vente[0], vente[1].reduce((acc, val) => acc + val.prix, 0)]
                    }).filter(vente => {
                      const dateSplit = vente[0].split('/');
                      return Number(dateSplit[0]) == month && dateSplit[2] == year;
                    }).sort((a, b) => {
                      if (new Date(a[0]) > new Date(b[0])) return -1;
                      if (new Date(a[0]) < new Date(b[0])) return 1;
                      return 0;
                    }).map((vente) => vente[1]);
                  }

                  const filterVentesCountByMonth = (data, month, year) => {
                    return Object.entries(data).map((vente) => {
                      return [vente[0], vente[1].length]
                    }).filter(vente => {
                      const dateSplit = vente[0].split('/');
                      return Number(dateSplit[0]) == month && dateSplit[2] == year;
                    }).sort((a, b) => {
                      if (new Date(a[0]) > new Date(b[0])) return -1;
                      if (new Date(a[0]) < new Date(b[0])) return 1;
                      return 0;
                    }).map((vente) => vente[1]);
                  }


                  const fetchData = async () => {
                    const week = $('#chart_week').val();
                    const month = $('#chart_month').val();
                    const year = $('#chart_year').val();

                    $('.loader_container').css('display', 'flex');

                    // loading chart

                    chart_management.updateOptions({
                      labels: [],
                      series: [{
                        name: 'total',
                        type: 'column',
                        data: [],
                      }]
                    })




                    const res = await fetch(`vente-by-month?month=${month>9?month:'0'+month}&year=${year}&week=${week}`);

                    const data = await res.json();
                    console.log("🚀 ~ fetchData ~ data:", data?.
      success
      )


                    if (data.success) {
                      const ventesLabels = filterLabelsByMonth(data?.data, month, year);
                      const ventesValues = filterVentesValuesByMonth(data?.data, month, year);
                      const ventesCount = filterVentesCountByMonth(data?.data, month, year);

                      // Stocker les données pour les tooltips
                      window.chartData = {
                        labels: ventesLabels.reverse(),
                        values: ventesValues.reverse(),
                        counts: ventesCount.reverse()
                      };

                      chart_management.updateOptions({
                        labels: window.chartData.labels,
                        series: [{
                          name: 'Ventes',
                          data: window.chartData.values,
                        }]
                      })

                      // Mettre à jour aussi le graphique des commandes
                      if (chart_orders) {
                        chart_orders.updateOptions({
                          labels: window.chartData.labels,
                          series: [{
                            name: 'Commandes',
                            data: window.chartData.counts,
                          }]
                        });
                        console.log('Graphique des commandes mis à jour depuis fetchData');
                      }
                    }

                    $('.loader_container').css('display', 'none');



                  }


                  const ventesLabels = filterLabelsByMonth(ventes, month, year);
                  const ventesValues = filterVentesValuesByMonth(ventes, month, year);
                  const ventesCount = filterVentesCountByMonth(ventes, month, year);

                  // Initialiser les données pour les tooltips
                  window.chartData = {
                    labels: ventesLabels.reverse(),
                    values: ventesValues.reverse(),
                    counts: ventesCount.reverse()
                  };

                  console.log('Données initiales du graphique:', window.chartData);

                  var options = {
                    series: [objectivePercent],
                    chart: {
                      height: 300,
                      type: 'radialBar',
                      offsetY: 0,
                    },
                    plotOptions: {
                      radialBar: {
                        startAngle: -90,
                        endAngle: 90,

                        hollow: {
                          margin: 0,
                          size: '70%',
                        },
                        dataLabels: {
                          showOn: 'always',
                          name: {
                            show: true,
                            fontSize: '13px',
                            fontWeight: '700',
                            offsetY: -5,
                            color: ['#98ED58', '#E5ECFF'],
                          },
                          value: {
                            color: ['#98ED58', '#E5ECFF'],
                            fontSize: '30px',
                            fontWeight: '700',
                            offsetY: -40,
                            show: true,
                          },
                        },
                        track: {
                          background: ['rgba(150,103,27,0.35)', '#E5ECFF'],
                          strokeWidth: '100%',
                        },
                      },
                    },
                    colors: ['#98ED58'],
                    stroke: {
                      lineCap: 'round',
                    },
                    labels: ['Progress'],
                  };

                  var chart = new ApexCharts(
                    document.querySelector('#chart-currently'),
                    options
                  );
                  chart.render();

                  /* -------------------------------------------------------------------------- */
                  /*                                     chart                                    */
                  /* -------------------------------------------------------------------------- */

                  options = {
                    chart: {
                      height: 500,
                      type: 'bar',
                      stacked: false,
                      toolbar: {
                        show: false
                      },
                    },
                    stroke: {
                      width: [0, 2, 4],
                      curve: 'smooth'
                    },
                    plotOptions: {
                      bar: {
                        columnWidth: '30%'
                      }
                    },
                    colors: ['#FF9C2C', '#dfe2e6', '#98ED58'],
                    series: [{
                      name: 'Ventes',
                      data: window.chartData ? window.chartData.values : ventesValues.reverse(),
                    }],
                    fill: {
                      opacity: [0.85, 0.25, 1],
                      gradient: {
                        inverseColors: !1,
                        shade: 'light',
                        type: 'vertical',
                        opacityFrom: 0.85,
                        opacityTo: 0.55,
                        stops: [0, 100, 100, 100],
                      },
                    },
                    labels: ventesLabels.reverse(),
                    markers: {
                      size: 0
                    },
                    xaxis: {
                      type: 'datetime'
                    },
                    yaxis: {
                      title: {
                        text: 'Prix total'
                      }
                    },
                    tooltip: {
                      enabled: true,
                      shared: false,
                      intersect: true,
                      theme: 'light',
                      style: {
                        fontSize: '14px',
                        fontFamily: 'Poppins, sans-serif'
                      },
                      y: {
                        formatter: function(value) {
                          if (value !== undefined) {
                            return new Intl.NumberFormat('fr-FR').format(value.toFixed(0)) + ' ' + currency;
                          }
                          return value;
                        },
                      },
                    },
                    grid: {
                      borderColor: '#f1f1f1'
                    },
                  };
                  let chart_management = new ApexCharts(
                    document.querySelector('#management_bar'),
                    options
                  )


                  chart_management.render();
                  console.log("chart management")
                  
                  // Test des tooltips
                  setTimeout(() => {
                    console.log('Test des tooltips - données disponibles:', window.chartData);
                    if (window.chartData && window.chartData.labels.length > 0) {
                      console.log('Premier label:', window.chartData.labels[0]);
                      console.log('Première valeur:', window.chartData.values[0]);
                    }
                  }, 1000);
                  
                  console.log("chart management 11")

                  /* -------------------------------------------------------------------------- */
                  /*                              Graphique Commandes                             */
                  /* -------------------------------------------------------------------------- */

                  // Configuration du graphique des commandes
                  var options_orders = {
                    chart: {
                      height: 500,
                      type: 'bar',
                      stacked: false,
                      toolbar: {
                        show: false
                      },
                    },
                    stroke: {
                      width: [0, 2, 4],
                      curve: 'smooth'
                    },
                    plotOptions: {
                      bar: {
                        columnWidth: '30%'
                      }
                    },
                    colors: ['#3498DB', '#dfe2e6', '#98ED58'],
                    series: [{
                      name: 'Commandes',
                      data: window.chartData && window.chartData.counts ? window.chartData.counts : [],
                    }],
                    fill: {
                      opacity: [0.85, 0.25, 1],
                      gradient: {
                        inverseColors: !1,
                        shade: 'light',
                        type: 'vertical',
                        opacityFrom: 0.85,
                        opacityTo: 0.55,
                        stops: [0, 100, 100, 100],
                      },
                    },
                    labels: window.chartData && window.chartData.labels ? window.chartData.labels : [],
                    markers: {
                      size: 0
                    },
                    xaxis: {
                      type: 'datetime'
                    },
                    yaxis: {
                      title: {
                        text: 'Nombre de commandes'
                      }
                    },
                    tooltip: {
                      enabled: true,
                      shared: false,
                      intersect: true,
                      theme: 'light',
                      style: {
                        fontSize: '14px',
                        fontFamily: 'Poppins, sans-serif'
                      },
                      y: {
                        formatter: function(value) {
                          if (value !== undefined) {
                            return value + ' commande' + (value > 1 ? 's' : '');
                          }
                          return value;
                        },
                      },
                    },
                    grid: {
                      borderColor: '#f1f1f1'
                    },
                  };

                  let chart_orders = new ApexCharts(
                    document.querySelector('#orders_chart'),
                    options_orders
                  )

                  chart_orders.render();
                  console.log("chart orders créé")
                  
                  // Test du graphique des commandes
                  setTimeout(() => {
                    console.log('Test du graphique des commandes - données disponibles:', window.chartData);
                    if (window.chartData && window.chartData.counts) {
                      console.log('Données des commandes:', window.chartData.counts);
                    }
                  }, 1500);


                  // socket.on('connect', () => {

                  //   //      socket.on(`
                  //   //     $ {
                  //   //       user_travail_pour
                  //   //     } - editvente`, (data) => {
                  //   // //   alert('Edit');
                  //   // //   console.log("chart management 22")

                  //   // // })
                  // })
                  console.log("chart management 33")
                  //chart_week

                  $('#chart_week').on('change', async function() {
                    await fetchData();

                  })


                  $('#chart_month').on('change', async function() {
                    await fetchData();


                  })


                  $('#chart_year').on('change', async function() {
                   await fetchData();


                  })

                  // force update data
                  fetchData();

                  // Fonction pour mettre à jour le graphique des commandes
                  const fetchOrdersData = async () => {
                    const week = $('#chart_week').val();
                    const month = $('#chart_month').val();
                    const year = $('#chart_year').val();

                    $('.loader_container').css('display', 'flex');

                    chart_orders.updateOptions({
                      labels: [],
                      series: [{
                        name: 'Commandes',
                        data: [],
                      }]
                    })

                    const res = await fetch(`vente-by-month?month=${month>9?month:'0'+month}&year=${year}&week=${week}`);
                    const data = await res.json();

                    if (data.success) {
                      const ventesLabels = filterLabelsByMonth(data?.data, month, year);
                      const ventesCount = filterVentesCountByMonth(data?.data, month, year);

                      // Mettre à jour les données globales
                      if (window.chartData) {
                        window.chartData.labels = ventesLabels.reverse();
                        window.chartData.counts = ventesCount.reverse();
                      }

                      chart_orders.updateOptions({
                        labels: window.chartData.labels,
                        series: [{
                          name: 'Commandes',
                          data: window.chartData.counts,
                        }]
                      })
                    }

                    $('.loader_container').css('display', 'none');
                  };

                  // Synchroniser les filtres pour les deux graphiques
                  $('#chart_week').on('change', function() {
                    fetchOrdersData();
                  });

                  $('#chart_month').on('change', function() {
                    fetchOrdersData();
                  });

                  $('#chart_year').on('change', function() {
                    fetchOrdersData();
                  });

                  // Initialiser le graphique des commandes
                  fetchOrdersData();

                  // Générer le classement des employés
                  generateClassementEmployes();

                  // Initialiser le compte à rebours
                  initCountdown();

                  // Mettre à jour le classement automatiquement
                  setInterval(() => {
                    updateClassementFromServer();
                  }, 30000); // Toutes les 30 secondes

                  // Fonction pour formater les montants en JavaScript
                  function formatAmountJS(amount) {
                    if (amount === 0) return '0';
                    return new Intl.NumberFormat('fr-FR').format(amount);
                  }

                  // Variables globales pour le suivi des positions
                  let previousRankings = {};

                  // Fonction pour générer le classement des employés
                  function generateClassementEmployes() {
                    const classementData = <%- JSON.stringify(classementEmployes || []) %>;
                    const container = $('#classementEmployes');
                    const currencySymbol = '<%= currency %>';
                    
                    console.log('Données du classement:', classementData); // Debug
                    console.log('Devise:', currencySymbol); // Debug
                    
                    if (!classementData || classementData.length === 0) {
                      // Données de test pour vérifier l'affichage
                      const testData = [
                        {
                          id: '1',
                          nom: 'Jean',
                          prenom: 'Eric',
                          role: 'Barman',
                          totalMontant: 18600,
                          nombreCommandes: 2
                        },
                        {
                          id: '2',
                          nom: 'Marie',
                          prenom: 'Claire',
                          role: 'Serveur(euse)',
                          totalMontant: 15200,
                          nombreCommandes: 3
                        },
                        {
                          id: '3',
                          nom: 'Pierre',
                          prenom: 'Dupont',
                          role: 'Barman',
                          totalMontant: 8900,
                          nombreCommandes: 1
                        }
                      ];
                      
                      console.log('Utilisation des données de test');
                      classementData = testData;
                    }
                    
                    // Créer le nouveau classement
                    let html = '';
                    classementData.forEach((employe, index) => {
                      const rank = index + 1;
                      const rankClass = rank === 1 ? 'first' : rank === 2 ? 'second' : rank === 3 ? 'third' : 'other';
                      const initials = (employe.nom?.charAt(0) || 'E') + (employe.prenom?.charAt(0) || 'M');
                      
                      html += `
                        <div class="classement-item ${rankClass}" data-employe-id="${employe.id}" data-rank="${rank}">
                          <div class="classement-rank ${rankClass}">
                            ${rank === 1 ? '🥇' : rank === 2 ? '🥈' : rank === 3 ? '🥉' : rank}
                          </div>
                          <div class="classement-employe-info">
                            <div class="classement-avatar ${rank === 1 ? 'first' : ''}">
                              ${initials}
                            </div>
                            <div class="classement-details">
                              <h5 class="classement-name">${employe.nom} ${employe.prenom}</h5>
                              <p class="classement-role">${employe.role || 'Barman'}</p>
                            </div>
                          </div>
                          <div class="classement-stats">
                            <div class="classement-ca">${formatAmountJS(employe.totalMontant)} ${currencySymbol}</div>
                            <div class="classement-commandes">${employe.nombreCommandes} commande${employe.nombreCommandes > 1 ? 's' : ''}</div>
                          </div>
                        </div>
                      `;
                    });
                    
                    // Animer les changements de position
                    animateRankingChanges(container, html, classementData);
                  }

                  // Fonction pour animer les changements de position
                  function animateRankingChanges(container, newHtml, classementData) {
                    const currentItems = container.find('.classement-item');
                    const currentRankings = {};
                    
                    // Récupérer les positions actuelles
                    currentItems.each(function() {
                      const employeId = $(this).data('employe-id');
                      const currentRank = parseInt($(this).data('rank')) || 0;
                      currentRankings[employeId] = currentRank;
                    });
                    
                    // Créer les nouvelles positions
                    const newRankings = {};
                    classementData.forEach((employe, index) => {
                      newRankings[employe.id] = index + 1;
                    });
                    
                    // Détecter les changements de position
                    const positionChanges = {};
                    Object.keys(newRankings).forEach(employeId => {
                      const oldRank = currentRankings[employeId] || 0;
                      const newRank = newRankings[employeId];
                      
                      if (oldRank !== 0 && newRank < oldRank) {
                        // L'employé a monté en position
                        positionChanges[employeId] = {
                          type: 'up',
                          oldRank: oldRank,
                          newRank: newRank,
                          difference: oldRank - newRank
                        };
                      } else if (oldRank !== 0 && newRank > oldRank) {
                        // L'employé a descendu en position
                        positionChanges[employeId] = {
                          type: 'down',
                          oldRank: oldRank,
                          newRank: newRank,
                          difference: newRank - oldRank
                        };
                      }
                    });
                    
                    // Si c'est la première fois, juste afficher
                    if (Object.keys(currentRankings).length === 0) {
                      container.html(newHtml);
                      animateInitialAppearance(container);
                      return;
                    }
                    
                    // Animer les changements
                    if (Object.keys(positionChanges).length > 0) {
                      animatePositionChanges(container, newHtml, positionChanges);
                    } else {
                      // Pas de changement, mettre à jour silencieusement
                      container.html(newHtml);
                    }
                    
                    // Sauvegarder les nouvelles positions
                    previousRankings = newRankings;
                  }

                  // Animation d'apparition initiale
                  function animateInitialAppearance(container) {
                    container.find('.classement-item').each(function(index) {
                      $(this).css({
                        'opacity': '0',
                        'transform': 'translateX(-20px)'
                      }).delay(index * 100).animate({
                        'opacity': '1',
                        'transform': 'translateX(0)'
                      }, 300);
                    });
                  }

                  // Animation des changements de position
                  function animatePositionChanges(container, newHtml, positionChanges) {
                    // Marquer les éléments qui vont changer
                    Object.keys(positionChanges).forEach(employeId => {
                      const change = positionChanges[employeId];
                      const item = container.find(`[data-employe-id="${employeId}"]`);
                      
                      if (change.type === 'up') {
                        // Animation de montée
                        item.addClass('ranking-up');
                        item.find('.classement-rank').addClass('pulse-gold');
                        
                        // Effet de particules dorées
                        createParticleEffect(item, 'gold');
                        
                        // Son de victoire (optionnel)
                        // playVictorySound();
                      } else if (change.type === 'down') {
                        // Animation de descente
                        item.addClass('ranking-down');
                      }
                    });
                    
                    // Attendre un peu puis mettre à jour
                    setTimeout(() => {
                      container.html(newHtml);
                      
                      // Animer les nouvelles positions
                      container.find('.classement-item').each(function(index) {
                        const employeId = $(this).data('employe-id');
                        const change = positionChanges[employeId];
                        
                        if (change && change.type === 'up') {
                          $(this).addClass('new-position-up');
                        } else if (change && change.type === 'down') {
                          $(this).addClass('new-position-down');
                        }
                        
                        $(this).css({
                          'opacity': '0',
                          'transform': 'translateY(20px)'
                        }).delay(index * 50).animate({
                          'opacity': '1',
                          'transform': 'translateY(0)'
                        }, 400);
                      });
                    }, 800);
                  }

                  // Créer un effet de particules
                  function createParticleEffect(element, type) {
                    const colors = {
                      gold: ['#FFD700', '#FFA500', '#FF8C00'],
                      silver: ['#C0C0C0', '#A9A9A9', '#808080'],
                      bronze: ['#CD7F32', '#B87333', '#A0522D']
                    };
                    
                    const particleColors = colors[type] || colors.gold;
                    
                    for (let i = 0; i < 8; i++) {
                      const particle = $('<div class="ranking-particle"></div>');
                      particle.css({
                        'background': particleColors[Math.floor(Math.random() * particleColors.length)],
                        'left': Math.random() * 100 + '%',
                        'top': Math.random() * 100 + '%',
                        'animation-delay': Math.random() * 0.5 + 's'
                      });
                      
                      element.append(particle);
                      
                      // Supprimer la particule après l'animation
                      setTimeout(() => {
                        particle.remove();
                                           }, 2000);
                   }

                   // Fonction pour mettre à jour le classement depuis le serveur
                   function updateClassementFromServer() {
                     $.ajax({
                       url: '/api/dashboard/classement',
                       method: 'GET',
                       success: function(data) {
                         if (data.success && data.classementEmployes) {
                           // Mettre à jour le classement avec les nouvelles données
                           const container = $('#classementEmployes');
                           const currencySymbol = '<%= currency %>';
                           
                           let html = '';
                           data.classementEmployes.forEach((employe, index) => {
                             const rank = index + 1;
                             const rankClass = rank === 1 ? 'first' : rank === 2 ? 'second' : rank === 3 ? 'third' : 'other';
                             const initials = (employe.nom?.charAt(0) || 'E') + (employe.prenom?.charAt(0) || 'M');
                             
                             html += `
                               <div class="classement-item ${rankClass}" data-employe-id="${employe.id}" data-rank="${rank}">
                                 <div class="classement-rank ${rankClass}">
                                   ${rank === 1 ? '🥇' : rank === 2 ? '🥈' : rank === 3 ? '🥉' : rank}
                                 </div>
                                 <div class="classement-employe-info">
                                   <div class="classement-avatar ${rank === 1 ? 'first' : ''}">
                                     ${initials}
                                   </div>
                                   <div class="classement-details">
                                     <h5 class="classement-name">${employe.nom} ${employe.prenom}</h5>
                                     <p class="classement-role">${employe.role || 'Barman'}</p>
                                   </div>
                                 </div>
                                 <div class="classement-stats">
                                   <div class="classement-ca">${formatAmountJS(employe.totalMontant)} ${currencySymbol}</div>
                                   <div class="classement-commandes">${employe.nombreCommandes} commande${employe.nombreCommandes > 1 ? 's' : ''}</div>
                                 </div>
                               </div>
                             `;
                           });
                           
                           // Animer les changements
                           animateRankingChanges(container, html, data.classementEmployes);
                         }
                       },
                       error: function() {
                         console.log('Erreur lors de la mise à jour du classement');
                       }
                     });
                   }
                  }

                  // Fonction pour initialiser le compte à rebours
                  function initCountdown() {
                    function updateCountdown() {
                      const now = new Date();
                      const currentDay = now.getDay(); // 0 = Dimanche, 1 = Lundi
                      const currentHour = now.getHours();
                      const currentMinute = now.getMinutes();
                      const currentSecond = now.getSeconds();

                      // Calculer le prochain lundi à 12h00
                      let daysUntilMonday = 1 - currentDay; // Lundi = 1
                      if (daysUntilMonday <= 0) daysUntilMonday += 7; // Si on est déjà lundi ou après
                      
                      // Si on est lundi et qu'il est avant 12h00, c'est aujourd'hui
                      if (currentDay === 1 && currentHour < 12) {
                        daysUntilMonday = 0;
                      }

                      const nextMonday = new Date();
                      nextMonday.setDate(now.getDate() + daysUntilMonday);
                      nextMonday.setHours(12, 0, 0, 0);

                      const timeDiff = nextMonday - now;

                      if (timeDiff <= 0) {
                        // Réinitialisation ! Mettre à jour les données
                        location.reload();
                        return;
                      }

                      const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                      const hours = Math.floor((timeDiff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                      const minutes = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));
                      const seconds = Math.floor((timeDiff % (1000 * 60)) / 1000);

                      // Mettre à jour l'affichage
                      $('#countdownDays').text(days.toString().padStart(2, '0'));
                      $('#countdownHours').text(hours.toString().padStart(2, '0'));
                      $('#countdownMinutes').text(minutes.toString().padStart(2, '0'));
                      $('#countdownSeconds').text(seconds.toString().padStart(2, '0'));

                      // Animation spéciale quand il reste moins d'1 heure
                      if (timeDiff < 3600000) { // 1 heure en millisecondes
                        $('.countdown-container').addClass('urgent');
                      }
                    }

                    // Mettre à jour immédiatement
                    updateCountdown();
                    
                    // Mettre à jour toutes les secondes
                    setInterval(updateCountdown, 1000);
                  }

                  // Gestion du bouton d'assistance WhatsApp
                  $('#whatsappHelpBtn').on('click', function() {
                    // Afficher la modal WhatsApp
                    $('#whatsappModal').fadeIn(300);
                    
                    // Animation de clic
                    $(this).addClass('clicked');
                    setTimeout(() => {
                      $(this).removeClass('clicked');
                    }, 200);
                  });

                  // Fermer la modal WhatsApp
                  $('.whatsapp-modal-close, #whatsappModal').on('click', function(e) {
                    if (e.target === this) {
                      $('#whatsappModal').fadeOut(300);
                    }
                  });

                  // Gestion des numéros WhatsApp
                  $('.whatsapp-number').on('click', function() {
                    const number = $(this).data('number');
                    const message = encodeURIComponent("Bonjour, j'ai besoin d'aide avec l'application E-maquis. Pouvez-vous m'aider ?");
                    const whatsappUrl = `https://wa.me/${number}?text=${message}`;
                    
                    // Fermer la modal
                    $('#whatsappModal').fadeOut(300);
                    
                    // Ouvrir WhatsApp dans un nouvel onglet
                    window.open(whatsappUrl, '_blank');
                  });

                  // Test d'affichage du graphique des commandes
                  setTimeout(() => {
                    console.log('Test d\'affichage du graphique des commandes');
                    console.log('Élément orders_chart existe:', $('#orders_chart').length > 0);
                    console.log('Données disponibles:', window.chartData);
                    if (window.chartData) {
                      console.log('Labels:', window.chartData.labels);
                      console.log('Counts:', window.chartData.counts);
                    }
                  }, 2000);

                  // Fonction pour mettre à jour le graphique des commandes avec les nouvelles données
                  const updateOrdersChart = () => {
                    if (chart_orders && window.chartData && window.chartData.counts) {
                      chart_orders.updateOptions({
                        labels: window.chartData.labels,
                        series: [{
                          name: 'Commandes',
                          data: window.chartData.counts,
                        }]
                      });
                      console.log('Graphique des commandes mis à jour avec:', window.chartData.counts);
                    }
                  };

                  // Gestion des onglets pour basculer entre les graphiques
                  $('.chart-tab').on('click', function() {
                    const chartType = $(this).data('chart');
                    
                    console.log('Onglet cliqué:', chartType);
                    
                    // Mettre à jour l'état actif des onglets
                    $('.chart-tab').removeClass('active');
                    $(this).addClass('active');
                    
                    // Masquer tous les graphiques
                    $('.chart-container > div').removeClass('chart-active').addClass('chart-hidden');
                    
                    // Afficher le graphique sélectionné
                    if (chartType === 'sales') {
                      $('#management_bar').removeClass('chart-hidden').addClass('chart-active');
                      console.log('Graphique des ventes affiché');
                    } else if (chartType === 'orders') {
                      $('#orders_chart').removeClass('chart-hidden').addClass('chart-active');
                      console.log('Graphique des commandes affiché');
                      
                      // Forcer le rendu du graphique des commandes
                      setTimeout(() => {
                        if (chart_orders) {
                          chart_orders.render();
                          console.log('Graphique des commandes re-rendu');
                        }
                      }, 100);
                    }
                  });
    </script>

    <script>
      $(document).ready(function () {
        $("#imprimer").on("click", function () {
          window.print();
        });
      });
    </script>

    <!-- jQuery  -->

    <script src="assets/js/bootstrap.bundle.min.js"></script>
    <script src="assets/js/metismenu.min.js"></script>
    <script src="assets/js/waves.js"></script>
    <script src="assets/js/simplebar.min.js"></script>

    <!-- Morris Js-->
    <script src="../plugins/morris-js/morris.min.js"></script>
    <!-- Raphael Js-->
    <script src="../plugins/raphael/raphael.min.js"></script>

    <!-- Morris Custom Js-->
    <script src="assets/pages/dashboard-demo.js"></script>

    <!-- App js -->
    <script src="assets/js/theme.js"></script>

    <div id="new-year-countdown" class="new-year-countdown">
      <div class="countdown-content">
        <h2>Compte à rebours Nouvel An</h2>
        <div id="countdown-display">
          <span id="days">00</span> jours <span id="hours">00</span> heures
          <span id="minutes">00</span> minutes
          <span id="seconds">00</span> secondes
        </div>
      </div>
    </div>

    <script>
      // Fonction pour le compte à rebours
      function newYearCountdown() {
        const now = new Date();
        const currentYear = now.getFullYear();
        const nextYear = currentYear + 1;
        const newYear = new Date(`January 1, ${nextYear} 00:00:00`).getTime();

        // Vérifier si nous sommes dans les 10 premiers jours de janvier
        const isNewYearPeriod = now.getMonth() === 0 && now.getDate() <= 10;
        // Vérifier si nous sommes dans les 5 premiers jours pour les confettis
        const isConfettiPeriod = now.getMonth() === 0 && now.getDate() <= 5;

        // Si nous sommes dans les 10 premiers jours, afficher le message
        if (isNewYearPeriod) {
          celebrateNewYear();
          return;
        }

        function updateCountdown() {
          const now = new Date().getTime();
          const timeLeft = newYear - now;

          const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24));
          const hours = Math.floor(
            (timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
          );
          const minutes = Math.floor(
            (timeLeft % (1000 * 60 * 60)) / (1000 * 60)
          );
          const seconds = Math.floor((timeLeft % (1000 * 60)) / 1000);

          document.getElementById("days").innerHTML = days
            .toString()
            .padStart(2, "0");
          document.getElementById("hours").innerHTML = hours
            .toString()
            .padStart(2, "0");
          document.getElementById("minutes").innerHTML = minutes
            .toString()
            .padStart(2, "0");
          document.getElementById("seconds").innerHTML = seconds
            .toString()
            .padStart(2, "0");

          // Quand on arrive à minuit le 1er janvier
          if (timeLeft < 0) {
            clearInterval(countdownTimer);
            celebrateNewYear();
          }
        }

        // Mettre à jour chaque seconde
        const countdownTimer = setInterval(updateCountdown, 1000);
        updateCountdown();
      }

      // Modifier la fonction celebrateNewYear()
      function celebrateNewYear() {
        const countdown = document.getElementById("countdown-display");
        const currentYear = new Date().getFullYear();
        const now = new Date();

        // Vérifier si nous sommes dans les 5 premiers jours de janvier
        const isWithinFirstFiveDays =
          now.getMonth() === 0 && now.getDate() <= 5;

        countdown.innerHTML = `
          <div class="new-year-message">
            <h1>Bonne Année ${currentYear}! 🎉</h1>
            <p>Que cette année vous apporte bonheur et prospérité!</p>
          </div>
        `;

        // Ajouter du style pour le message
        const style = document.createElement("style");
        style.textContent = `
          .new-year-message {
            animation: fadeIn 1s ease-in;
            padding: 10px;
          }
          .new-year-message h1 {
            color: #ff9c2c;
            font-size: 1.5em;
            margin-bottom: 10px;
          }
          .new-year-message p {
            color: #666;
            font-size: 0.9em;
          }
          @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
          }
        `;
        document.head.appendChild(style);

        // Lancer les confettis seulement si on est dans les 5 premiers jours
        if (isWithinFirstFiveDays) {
          function launchConfettiWave() {
            const commonConfig = {
              particleCount: 50,
              spread: 80,
              startVelocity: 30,
              gravity: 0.5,
              ticks: 400,
              colors: ["#ff9c2c", "#ffffff", "#000000", "#ff0000", "#00ff00"],
              shapes: ["square", "circle"],
              scalar: 1,
              zIndex: 999,
              disableForReducedMotion: true,
            };

            // Créer une grille de points de lancement
            for (let i = 0; i <= 1; i += 0.2) {
              startConfetti({
                ...commonConfig,
                origin: { x: i, y: 0.1 },
                angle: 80 + Math.random() * 20,
              });
            }
          }

          // Lancer la première vague
          launchConfettiWave();

          // Créer un effet continu pendant 5 secondes
          const confettiInterval = setInterval(launchConfettiWave, 200);

          // Arrêter après 5 secondes
          setTimeout(() => {
            clearInterval(confettiInterval);
            stopConfetti();
          }, 5000);
        }
      }

      // Démarrer le compte à rebours
      newYearCountdown();
    </script>

    <style>
      .new-year-countdown {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1000;
        background: rgba(255, 255, 255, 0.95);
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
      }

      .countdown-content {
        color: #333;
      }

      .countdown-content h2 {
        margin-bottom: 10px;
        font-size: 1.2em;
        color: #ff9c2c;
      }

      #countdown-display {
        font-size: 1.1em;
        font-weight: bold;
      }

      #countdown-display span {
        color: #ff9c2c;
        padding: 0 5px;
      }

      @media (max-width: 768px) {
        .new-year-countdown {
          position: relative;
          top: 0;
          right: 0;
          margin: 10px;
        }
      }
    </style>
  </body>
</html>
